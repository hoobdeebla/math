{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack:///./node_modules/asciimath2tex/asciimath2tex.js","webpack:///./src/utils/format.js","webpack:///./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack:///./src/components/latex.js","webpack:///./node_modules/react-latex/build/latex.js","webpack:///(webpack)/buildin/module.js"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createForOfIteratorHelper","allowArrayLike","it","F","s","e","f","normalCompletion","didErr","step","_e2","Parser","AsciiMathParser","instance","Constructor","_classCallCheck","this","decimalsign","setup_symbols","sort_symbols","protoProps","staticProps","greek_letters","relations","constants","concat","left_brackets","asciimath","tex","right_brackets","free_tex","leftright_brackets","left_tex","right_tex","unary_symbols","func","rewriteleftright","acc","atname","atval","binary_symbols","option","rawfirst","non_constant_symbols","by_asciimath","a","b","sort","message","pos","neighbourhood","source","Error","token","end","ttype","matches","filter","x","y","str","replace","_source","brackets","arguments","strip_space","tok","bracket","skip_brackets","skipleft","includes","left","skipright","right","middle","middle_asciimath","input","consume","exprs","eof","expr","expression_list","rb","right_bracket","def","lr","leftright_bracket","ss","subsup","osource","reduced","re","m","exec","match","expression","comma","exact","negative","negative_expression","first","intermediate_or_fraction","second","_step","_iterator","c","dash","other_constant","intermediate","frac","ufirst","unbracket","usecond","numerator","denominator","_ufirst","simple","sub_expr","sup_expr","sub","sup","longest","matrix","bracketed_expression","binary","constant","text","unary","negative_simple","left_bracket","contents","matrix_contents","contents_tex","rows","map","r","join","matrix_tex","is_array","column_desc","leftright","row_length","lb","cells","columns","_comma","cell","matrix_cell","row_column_desc","lvert","rvert","l","_r","_middle","_step2","_iterator2","_step3","_iterator3","_step4","position","_iterator4","quoted","escape_text","textfn","_text","_step5","_iterator5","_ref","_ref2","lb1","rb1","atex","op","arg1","arg2","_step6","_iterator6","u","sstex","barg","arg","argtex","raw","_u$rewriteleftright","greek","number","arbitrary_constant","literal","re_greek","RegExp","re_number","_step7","_iterator7","sym","notm","_step8","_iterator8","_sym","_step9","_iterator9","nc","spos","symbol","Format","formula","parse","LatexWrapper","block","children","displayMode","_createClass","defineProperties","_katex2","_interopRequireDefault","_react2","_propTypes2","obj","__esModule","_possibleConstructorReturn","self","ReferenceError","Latex","_React$Component","__proto__","getPrototypeOf","apply","subClass","superClass","create","setPrototypeOf","_inherits","_props","renderUs","string","options","regularExpression","blockRegularExpression","renderLatexString","t","renderedString","renderToString","assign","console","error","result","latexMatch","stringWithoutLatex","split","forEach","index","stringToDisplay","stringToStrip","type","createElement","dangerouslySetInnerHTML","__html","latexify","leqno","fleqn","throwOnError","errorColor","macros","minRuleThickness","colorIsTextColor","maxSize","maxExpand","strict","trust","unshift","Component","propTypes","bool","object","oneOfType","defaultProps","output","module","exports","window","webpackPolyfill","deprecate","paths","get"],"mappings":"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,MACb,IAAO,WACN,CACD,UAAa,OACb,IAAO,UACN,CACD,UAAa,MACb,IAAO,UACN,CACD,UAAa,KACb,IAAO,UACN,CACD,UAAa,SACb,IAAO,YACN,CACD,UAAa,MACb,IAAO,YACN,CACD,UAAa,SACb,IAAO,YACN,CACD,UAAa,OACb,IAAO,YACN,CACD,UAAa,SACb,IAAO,YACN,CACD,UAAa,MACb,IAAO,YACN,CACD,UAAa,WACb,IAAO,cACN,CACD,UAAa,OACb,IAAO,cACN,CACD,UAAa,OACb,IAAO,UACN,CACD,UAAa,KACb,IAAO,UACN,CACD,UAAa,SACb,IAAO,YACN,CACD,UAAa,MACb,IAAO,YACN,CACD,UAAa,SACb,IAAO,YACN,CACD,UAAa,MACb,IAAO,YACN,CACD,UAAa,WACb,IAAO,cACN,CACD,UAAa,OACb,IAAO,cACN,CACD,UAAa,QACb,IAAO,WACN,CACD,UAAa,MACb,IAAO,YAETP,KAAKQ,UAAY,CAAC,CAChB,UAAa,KACb,IAAO,MACN,CACD,UAAa,KACb,IAAO,MACN,CACD,UAAa,KACb,IAAO,MACN,CACD,UAAa,KACb,IAAO,MACN,CACD,UAAa,QACb,IAAO,KACN,CACD,UAAa,UACb,IAAO,aACN,CACD,UAAa,OACb,IAAO,aACN,CACD,UAAa,iBACb,IAAO,oBACN,CACD,UAAa,iBACb,IAAO,oBACN,CACD,UAAa,aACb,IAAO,gBACN,CACD,UAAa,aACb,IAAO,gBACN,CACD,UAAa,YACb,IAAO,eACN,CACD,UAAa,YACb,IAAO,eACN,CACD,UAAa,YACb,IAAO,eACN,CACD,UAAa,WACb,IAAO,cACN,CACD,UAAa,WACb,IAAO,cACN,CACD,UAAa,UACb,IAAO,aACN,CACD,UAAa,SACb,IAAO,YACN,CACD,UAAa,SACb,IAAO,YACN,CACD,UAAa,SACb,IAAO,YACN,CACD,UAAa,SACb,IAAO,YACN,CACD,UAAa,SACb,IAAO,YACN,CACD,UAAa,QACb,IAAO,YACN,CACD,UAAa,QACb,IAAO,YACN,CACD,UAAa,QACb,IAAO,WACN,CACD,UAAa,QACb,IAAO,WACN,CACD,UAAa,QACb,IAAO,WACN,CACD,UAAa,QACb,IAAO,WACN,CACD,UAAa,QACb,IAAO,WACN,CACD,UAAa,QACb,IAAO,WACN,CACD,UAAa,QACb,IAAO,WACN,CACD,UAAa,OACb,IAAO,UACN,CACD,UAAa,OACb,IAAO,UACN,CACD,UAAa,OACb,IAAO,YACN,CACD,UAAa,OACb,IAAO,UACN,CACD,UAAa,OACb,IAAO,UACN,CACD,UAAa,OACb,IAAO,WACN,CACD,UAAa,OACb,IAAO,UACN,CACD,UAAa,OACb,IAAO,aACN,CACD,UAAa,OACb,IAAO,eACN,CACD,UAAa,YACb,IAAO,eACN,CACD,UAAa,OACb,IAAO,gBACN,CACD,UAAa,OACb,IAAO,2BACN,CACD,UAAa,OACb,IAAO,eACN,CACD,UAAa,OACb,IAAO,oBACN,CACD,UAAa,OACb,IAAO,gBACN,CACD,UAAa,OACb,IAAO,eACN,CACD,UAAa,OACb,IAAO,oBACN,CACD,UAAa,MACb,IAAO,SACN,CACD,UAAa,MACb,IAAO,UACN,CACD,UAAa,MACb,IAAO,YACN,CACD,UAAa,MACb,IAAO,YACN,CACD,UAAa,MACb,IAAO,cACN,CACD,UAAa,MACb,IAAO,YACN,CACD,UAAa,MACb,IAAO,SACN,CACD,UAAa,MACb,IAAO,YACN,CACD,UAAa,MACb,IAAO,SACN,CACD,UAAa,MACb,IAAO,YACN,CACD,UAAa,MACb,IAAO,SACN,CACD,UAAa,MACb,IAAO,oBACN,CACD,UAAa,MACb,IAAO,SACN,CACD,UAAa,MACb,IAAO,SACN,CACD,UAAa,MACb,IAAO,SACN,CACD,UAAa,MACb,IAAO,aACN,CACD,UAAa,MACb,IAAO,WACN,CACD,UAAa,OACb,IAAO,cACN,CACD,UAAa,MACb,IAAO,YACN,CACD,UAAa,MACb,IAAO,YACN,CACD,UAAa,MACb,IAAO,SACN,CACD,UAAa,MACb,IAAO,uBACN,CACD,UAAa,MACb,IAAO,uBACN,CACD,UAAa,MACb,IAAO,uBACN,CACD,UAAa,MACb,IAAO,oBACN,CACD,UAAa,MACb,IAAO,uBACN,CACD,UAAa,MACb,IAAO,YACN,CACD,UAAa,MACb,IAAO,SACN,CACD,UAAa,MACb,IAAO,uBACN,CACD,UAAa,MACb,IAAO,2BACN,CACD,UAAa,KACb,IAAO,SACN,CACD,UAAa,KACb,IAAO,KACN,CACD,UAAa,KACb,IAAO,OACN,CACD,UAAa,OACb,IAAO,eACN,CACD,UAAa,KACb,IAAO,WACN,CACD,UAAa,KACb,IAAO,SACN,CACD,UAAa,KACb,IAAO,WACN,CACD,UAAa,KACb,IAAO,YACN,CACD,UAAa,KACb,IAAO,UACN,CACD,UAAa,IACb,IAAO,WACN,CACD,UAAa,IACb,IAAO,OACN,CACD,UAAa,KACb,IAAO,WACN,CACD,UAAa,KACb,IAAO,SACN,CACD,UAAa,KACb,IAAO,SACN,CACD,UAAa,KACb,IAAO,SACN,CACD,UAAa,KACb,IAAO,SACN,CACD,UAAa,KACb,IAAO,QACN,CACD,UAAa,KACb,IAAO,cACN,CACD,UAAa,KACb,IAAO,WACN,CACD,UAAa,KACb,IAAO,eACN,CACD,UAAa,KACb,IAAO,aACN,CACD,UAAa,KACb,IAAO,WACN,CACD,UAAa,KACb,IAAO,WACN,CACD,UAAa,KACb,IAAO,WACN,CACD,UAAa,KACb,IAAO,eACN,CACD,UAAa,KACb,IAAO,eACN,CACD,UAAa,KACb,IAAO,eACN,CACD,UAAa,KACb,IAAO,eACN,CACD,UAAa,KACb,IAAO,eACN,CACD,UAAa,KACb,IAAO,QACN,CACD,UAAa,KACb,IAAO,0BACN,CACD,UAAa,KACb,IAAO,0BACN,CACD,UAAa,MACb,IAAO,SACN,CACD,UAAa,IACb,IAAO,UACN,CACD,UAAa,IACb,IAAO,UACN,CACD,UAAa,IACb,IAAO,OACN,CACD,UAAa,WACb,IAAO,YACN,CACD,UAAa,SACb,IAAO,YACN,CACD,UAAa,SACb,IAAO,YACN,CACD,UAAa,QACb,IAAO,WACN,CACD,UAAa,UACb,IAAO,aACN,CACD,UAAa,YACb,IAAO,eACN,CACD,UAAa,wBACb,IAAO,2BACN,CACD,UAAa,SACb,IAAO,YACN,CACD,UAAa,SACb,IAAO,YACN,CACD,UAAa,MACb,IAAO,SACN,CACD,UAAa,UACb,IAAO,aACN,CACD,UAAa,QACb,IAAO,WACN,CACD,UAAa,WACb,IAAO,cACN,CACD,UAAa,SACb,IAAO,YACN,CACD,UAAa,SACb,IAAO,YACN,CACD,UAAa,iBACb,IAAO,oBACN,CACD,UAAa,oBACb,IAAO,uBACN,CACD,UAAa,SACb,IAAO,YACN,CACD,UAAa,QACb,IAAO,WACN,CACD,UAAa,MACb,IAAO,SACN,CACD,UAAa,SACb,IAAO,SACN,CACD,UAAa,QACb,IAAO,WACN,CACD,UAAa,SACb,IAAO,YACN,CACD,UAAa,OACb,IAAO,UACN,CACD,UAAa,QACb,IAAO,WACN,CACD,UAAa,MACb,IAAO,SACN,CACD,UAAa,MACb,IAAO,SACN,CACD,UAAa,KACb,IAAO,QACN,CACD,UAAa,WACb,IAAO,cACN,CACD,UAAa,QACb,IAAO,WACN,CACD,UAAa,YACb,IAAO,eACN,CACD,UAAa,UACb,IAAO,aACN,CACD,UAAa,QACb,IAAO,WACN,CACD,UAAa,QACb,IAAO,WACN,CACD,UAAa,KACb,IAAO,QACN,CACD,UAAa,SACb,IAAO,YACN,CACD,UAAa,WACb,IAAO,WACN,CACD,UAAa,WACb,IAAO,WACN,CACD,UAAa,MACb,IAAO,SACN,CACD,UAAa,MACb,IAAO,SACN,CACD,UAAa,OACb,IAAO,UACN,CACD,UAAa,MACb,IAAO,UAETR,KAAKQ,UAAYR,KAAKQ,UAAUC,OAAOT,KAAKO,WAC5CP,KAAKU,cAAgB,CAAC,CACpBC,UAAW,SACXC,IAAK,YACJ,CACDD,UAAW,KACXC,IAAK,YACJ,CACDD,UAAW,KACXC,IAAK,YACJ,CACDD,UAAW,KACXC,IAAK,KACJ,CACDD,UAAW,IACXC,IAAK,KACJ,CACDD,UAAW,IACXC,IAAK,KACJ,CACDD,UAAW,IACXC,IAAK,YACJ,CACDD,UAAW,SACXC,IAAK,aAEPZ,KAAKa,eAAiB,CAAC,CACrBF,UAAW,SACXC,IAAK,YACJ,CACDD,UAAW,KACXC,IAAK,YACJ,CACDD,UAAW,KACXC,IAAK,YACJ,CACDD,UAAW,KACXC,IAAK,IACLE,SAAU,QACT,CACDH,UAAW,IACXC,IAAK,KACJ,CACDD,UAAW,IACXC,IAAK,KACJ,CACDD,UAAW,IACXC,IAAK,YACJ,CACDD,UAAW,SACXC,IAAK,aAEPZ,KAAKe,mBAAqB,CAAC,CACzBJ,UAAW,IACXK,SAAU,UACVC,UAAW,UACXH,SAAU,MAEZd,KAAKkB,cAAgB,CAAC,CACpBP,UAAW,OACXC,IAAK,UACJ,CACDD,UAAW,IACXC,IAAK,IACLO,MAAM,GACL,CACDR,UAAW,IACXC,IAAK,IACLO,MAAM,GACL,CACDR,UAAW,MACXC,IAAK,QACLO,MAAM,GACL,CACDR,UAAW,MACXC,IAAK,QACLO,MAAM,GACL,CACDR,UAAW,MACXC,IAAK,QACLO,MAAM,GACL,CACDR,UAAW,SACXC,IAAK,WACLO,MAAM,GACL,CACDR,UAAW,SACXC,IAAK,WACLO,MAAM,GACL,CACDR,UAAW,SACXC,IAAK,WACLO,MAAM,GACL,CACDR,UAAW,OACXC,IAAK,SACLO,MAAM,GACL,CACDR,UAAW,OACXC,IAAK,SACLO,MAAM,GACL,CACDR,UAAW,OACXC,IAAK,SACLO,MAAM,GACL,CACDR,UAAW,MACXC,IAAK,QACLO,MAAM,GACL,CACDR,UAAW,OACXC,IAAK,SACLO,MAAM,GACL,CACDR,UAAW,OACXC,IAAK,uBACLO,MAAM,GACL,CACDR,UAAW,OACXC,IAAK,uBACLO,MAAM,GACL,CACDR,UAAW,MACXC,IAAK,QACLO,MAAM,GACL,CACDR,UAAW,MACXC,IAAK,QACLO,MAAM,GACL,CACDR,UAAW,MACXC,IAAK,QACLO,MAAM,GACL,CACDR,UAAW,KACXC,IAAK,OACLO,MAAM,GACL,CACDR,UAAW,MACXS,iBAAkB,CAAC,IAAK,MACvB,CACDT,UAAW,OACXS,iBAAkB,CAAC,MAAO,QACzB,CACDT,UAAW,QACXS,iBAAkB,CAAC,WAAY,aAC9B,CACDT,UAAW,OACXS,iBAAkB,CAAC,UAAW,YAC7B,CACDT,UAAW,MACXC,IAAK,QACLO,MAAM,GACL,CACDR,UAAW,MACXC,IAAK,QACLO,MAAM,GACL,CACDR,UAAW,MACXC,IAAK,QACLO,MAAM,GACL,CACDR,UAAW,SACXC,IAAK,WACLO,MAAM,GACL,CACDR,UAAW,SACXC,IAAK,WACLO,MAAM,GACL,CACDR,UAAW,SACXC,IAAK,WACLO,MAAM,GACL,CACDR,UAAW,OACXC,IAAK,SACLO,MAAM,GACL,CACDR,UAAW,OACXC,IAAK,SACLO,MAAM,GACL,CACDR,UAAW,OACXC,IAAK,SACLO,MAAM,GACL,CACDR,UAAW,MACXC,IAAK,QACLO,MAAM,GACL,CACDR,UAAW,MACXC,IAAK,QACLO,MAAM,GACL,CACDR,UAAW,MACXC,IAAK,QACLO,MAAM,GACL,CACDR,UAAW,MACXC,IAAK,QACLO,MAAM,GACL,CACDR,UAAW,KACXC,IAAK,OACLO,MAAM,GACL,CACDR,UAAW,MACXC,IAAK,QACLQ,iBAAkB,CAAC,IAAK,MACvB,CACDT,UAAW,MACXC,IAAK,QACLO,MAAM,GACL,CACDR,UAAW,MACXC,IAAK,QACLO,MAAM,GACL,CACDR,UAAW,MACXC,IAAK,QACLO,MAAM,GACL,CACDR,UAAW,MACXC,IAAK,sBACLO,MAAM,GACL,CACDR,UAAW,SACXC,IAAK,YACJ,CACDD,UAAW,OACXC,IAAK,UACJ,CACDD,UAAW,MACXC,IAAK,QACLS,KAAK,GACJ,CACDV,UAAW,MACXC,IAAK,aACLS,KAAK,GACJ,CACDV,UAAW,WACXC,IAAK,aACLS,KAAK,GACJ,CACDV,UAAW,MACXC,IAAK,QACLS,KAAK,GACJ,CACDV,UAAW,QACXC,IAAK,UACLS,KAAK,GACJ,CACDV,UAAW,MACXC,IAAK,QACLS,KAAK,GACJ,CACDV,UAAW,OACXC,IAAK,SACLS,KAAK,GACJ,CACDV,UAAW,KACXC,IAAK,cACLS,KAAK,GACJ,CACDV,UAAW,YACXC,IAAK,cACLS,KAAK,GACJ,CACDV,UAAW,SACXC,IAAK,eACLS,KAAK,GACJ,CACDV,UAAW,aACXC,IAA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","file":"7833940ca9374f86595cac57478e3c49ffd537f5-348b0165ef91c61a7f2b.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.is-array\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.function.name\";\nimport _slicedToArray from \"/home/hoob/Dropbox/dev/math/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.array.sort\";\nimport _classCallCheck from \"/home/hoob/Dropbox/dev/math/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hoob/Dropbox/dev/math/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar AsciiMathParser = /*#__PURE__*/function () {\n  function AsciiMathParser() {\n    _classCallCheck(this, AsciiMathParser);\n\n    this.decimalsign = '\\\\.';\n    this.setup_symbols();\n    this.sort_symbols();\n  }\n\n  _createClass(AsciiMathParser, [{\n    key: \"setup_symbols\",\n    value: function setup_symbols() {\n      this.greek_letters = ['alpha', 'beta', 'gamma', 'Gamma', 'delta', 'Delta', 'epsilon', 'varepsilon', 'zeta', 'eta', 'theta', 'Theta', 'vartheta', 'iota', 'kappa', 'lambda', 'Lambda', 'mu', 'nu', 'xi', 'Xi', 'pi', 'Pi', 'rho', 'sigma', 'Sigma', 'tau', 'upsilon', 'phi', 'Phi', 'varphi', 'chi', 'psi', 'Psi', 'omega', 'Omega'];\n      this.relations = [{\n        \"asciimath\": \":=\",\n        \"tex\": \":=\"\n      }, {\n        \"asciimath\": \":|:\",\n        \"tex\": \"\\\\|\"\n      }, {\n        \"asciimath\": \"=>\",\n        \"tex\": \"\\\\Rightarrow\"\n      }, {\n        \"asciimath\": \"approx\",\n        \"tex\": \"\\\\approx\"\n      }, {\n        \"asciimath\": \"~~\",\n        \"tex\": \"\\\\approx\"\n      }, {\n        \"asciimath\": \"cong\",\n        \"tex\": \"\\\\cong\"\n      }, {\n        \"asciimath\": \"~=\",\n        \"tex\": \"\\\\cong\"\n      }, {\n        \"asciimath\": \"equiv\",\n        \"tex\": \"\\\\equiv\"\n      }, {\n        \"asciimath\": \"-=\",\n        \"tex\": \"\\\\equiv\"\n      }, {\n        \"asciimath\": \"exists\",\n        \"tex\": \"\\\\exists\"\n      }, {\n        \"asciimath\": \"EE\",\n        \"tex\": \"\\\\exists\"\n      }, {\n        \"asciimath\": \"forall\",\n        \"tex\": \"\\\\forall\"\n      }, {\n        \"asciimath\": \"AA\",\n        \"tex\": \"\\\\forall\"\n      }, {\n        \"asciimath\": \">=\",\n        \"tex\": \"\\\\ge\"\n      }, {\n        \"asciimath\": \"ge\",\n        \"tex\": \"\\\\ge\"\n      }, {\n        \"asciimath\": \"gt=\",\n        \"tex\": \"\\\\geq\"\n      }, {\n        \"asciimath\": \"geq\",\n        \"tex\": \"\\\\geq\"\n      }, {\n        \"asciimath\": \"gt\",\n        \"tex\": \"\\\\gt\"\n      }, {\n        \"asciimath\": \"in\",\n        \"tex\": \"\\\\in\"\n      }, {\n        \"asciimath\": \"<=\",\n        \"tex\": \"\\\\le\"\n      }, {\n        \"asciimath\": \"le\",\n        \"tex\": \"\\\\le\"\n      }, {\n        \"asciimath\": \"lt=\",\n        \"tex\": \"\\\\leq\"\n      }, {\n        \"asciimath\": \"leq\",\n        \"tex\": \"\\\\leq\"\n      }, {\n        \"asciimath\": \"lt\",\n        \"tex\": \"\\\\lt\"\n      }, {\n        \"asciimath\": \"models\",\n        \"tex\": \"\\\\models\"\n      }, {\n        \"asciimath\": \"|==\",\n        \"tex\": \"\\\\models\"\n      }, {\n        \"asciimath\": \"!=\",\n        \"tex\": \"\\\\ne\"\n      }, {\n        \"asciimath\": \"ne\",\n        \"tex\": \"\\\\ne\"\n      }, {\n        \"asciimath\": \"notin\",\n        \"tex\": \"\\\\notin\"\n      }, {\n        \"asciimath\": \"!in\",\n        \"tex\": \"\\\\notin\"\n      }, {\n        \"asciimath\": \"prec\",\n        \"tex\": \"\\\\prec\"\n      }, {\n        \"asciimath\": \"-lt\",\n        \"tex\": \"\\\\prec\"\n      }, {\n        \"asciimath\": \"-<\",\n        \"tex\": \"\\\\prec\"\n      }, {\n        \"asciimath\": \"preceq\",\n        \"tex\": \"\\\\preceq\"\n      }, {\n        \"asciimath\": \"-<=\",\n        \"tex\": \"\\\\preceq\"\n      }, {\n        \"asciimath\": \"propto\",\n        \"tex\": \"\\\\propto\"\n      }, {\n        \"asciimath\": \"prop\",\n        \"tex\": \"\\\\propto\"\n      }, {\n        \"asciimath\": \"subset\",\n        \"tex\": \"\\\\subset\"\n      }, {\n        \"asciimath\": \"sub\",\n        \"tex\": \"\\\\subset\"\n      }, {\n        \"asciimath\": \"subseteq\",\n        \"tex\": \"\\\\subseteq\"\n      }, {\n        \"asciimath\": \"sube\",\n        \"tex\": \"\\\\subseteq\"\n      }, {\n        \"asciimath\": \"succ\",\n        \"tex\": \"\\\\succ\"\n      }, {\n        \"asciimath\": \">-\",\n        \"tex\": \"\\\\succ\"\n      }, {\n        \"asciimath\": \"succeq\",\n        \"tex\": \"\\\\succeq\"\n      }, {\n        \"asciimath\": \">-=\",\n        \"tex\": \"\\\\succeq\"\n      }, {\n        \"asciimath\": \"supset\",\n        \"tex\": \"\\\\supset\"\n      }, {\n        \"asciimath\": \"sup\",\n        \"tex\": \"\\\\supset\"\n      }, {\n        \"asciimath\": \"supseteq\",\n        \"tex\": \"\\\\supseteq\"\n      }, {\n        \"asciimath\": \"supe\",\n        \"tex\": \"\\\\supseteq\"\n      }, {\n        \"asciimath\": \"vdash\",\n        \"tex\": \"\\\\vdash\"\n      }, {\n        \"asciimath\": \"|--\",\n        \"tex\": \"\\\\vdash\"\n      }];\n      this.constants = [{\n        \"asciimath\": \"dt\",\n        \"tex\": \"dt\"\n      }, {\n        \"asciimath\": \"dx\",\n        \"tex\": \"dx\"\n      }, {\n        \"asciimath\": \"dy\",\n        \"tex\": \"dy\"\n      }, {\n        \"asciimath\": \"dz\",\n        \"tex\": \"dz\"\n      }, {\n        \"asciimath\": \"prime\",\n        \"tex\": \"'\"\n      }, {\n        \"asciimath\": \"implies\",\n        \"tex\": \"\\\\implies\"\n      }, {\n        \"asciimath\": \"epsi\",\n        \"tex\": \"\\\\epsilon\"\n      }, {\n        \"asciimath\": \"leftrightarrow\",\n        \"tex\": \"\\\\leftrightarrow\"\n      }, {\n        \"asciimath\": \"Leftrightarrow\",\n        \"tex\": \"\\\\Leftrightarrow\"\n      }, {\n        \"asciimath\": \"rightarrow\",\n        \"tex\": \"\\\\rightarrow\"\n      }, {\n        \"asciimath\": \"Rightarrow\",\n        \"tex\": \"\\\\Rightarrow\"\n      }, {\n        \"asciimath\": \"backslash\",\n        \"tex\": \"\\\\backslash\"\n      }, {\n        \"asciimath\": \"leftarrow\",\n        \"tex\": \"\\\\leftarrow\"\n      }, {\n        \"asciimath\": \"Leftarrow\",\n        \"tex\": \"\\\\Leftarrow\"\n      }, {\n        \"asciimath\": \"setminus\",\n        \"tex\": \"\\\\setminus\"\n      }, {\n        \"asciimath\": \"bigwedge\",\n        \"tex\": \"\\\\bigwedge\"\n      }, {\n        \"asciimath\": \"diamond\",\n        \"tex\": \"\\\\diamond\"\n      }, {\n        \"asciimath\": \"bowtie\",\n        \"tex\": \"\\\\bowtie\"\n      }, {\n        \"asciimath\": \"bigvee\",\n        \"tex\": \"\\\\bigvee\"\n      }, {\n        \"asciimath\": \"bigcap\",\n        \"tex\": \"\\\\bigcap\"\n      }, {\n        \"asciimath\": \"bigcup\",\n        \"tex\": \"\\\\bigcup\"\n      }, {\n        \"asciimath\": \"square\",\n        \"tex\": \"\\\\square\"\n      }, {\n        \"asciimath\": \"lamda\",\n        \"tex\": \"\\\\lambda\"\n      }, {\n        \"asciimath\": \"Lamda\",\n        \"tex\": \"\\\\Lambda\"\n      }, {\n        \"asciimath\": \"aleph\",\n        \"tex\": \"\\\\aleph\"\n      }, {\n        \"asciimath\": \"angle\",\n        \"tex\": \"\\\\angle\"\n      }, {\n        \"asciimath\": \"frown\",\n        \"tex\": \"\\\\frown\"\n      }, {\n        \"asciimath\": \"qquad\",\n        \"tex\": \"\\\\qquad\"\n      }, {\n        \"asciimath\": \"cdots\",\n        \"tex\": \"\\\\cdots\"\n      }, {\n        \"asciimath\": \"vdots\",\n        \"tex\": \"\\\\vdots\"\n      }, {\n        \"asciimath\": \"ddots\",\n        \"tex\": \"\\\\ddots\"\n      }, {\n        \"asciimath\": \"cdot\",\n        \"tex\": \"\\\\cdot\"\n      }, {\n        \"asciimath\": \"star\",\n        \"tex\": \"\\\\star\"\n      }, {\n        \"asciimath\": \"|><|\",\n        \"tex\": \"\\\\bowtie\"\n      }, {\n        \"asciimath\": \"circ\",\n        \"tex\": \"\\\\circ\"\n      }, {\n        \"asciimath\": \"oint\",\n        \"tex\": \"\\\\oint\"\n      }, {\n        \"asciimath\": \"grad\",\n        \"tex\": \"\\\\nabla\"\n      }, {\n        \"asciimath\": \"quad\",\n        \"tex\": \"\\\\quad\"\n      }, {\n        \"asciimath\": \"uarr\",\n        \"tex\": \"\\\\uparrow\"\n      }, {\n        \"asciimath\": \"darr\",\n        \"tex\": \"\\\\downarrow\"\n      }, {\n        \"asciimath\": \"downarrow\",\n        \"tex\": \"\\\\downarrow\"\n      }, {\n        \"asciimath\": \"rarr\",\n        \"tex\": \"\\\\rightarrow\"\n      }, {\n        \"asciimath\": \">->>\",\n        \"tex\": \"\\\\twoheadrightarrowtail\"\n      }, {\n        \"asciimath\": \"larr\",\n        \"tex\": \"\\\\leftarrow\"\n      }, {\n        \"asciimath\": \"harr\",\n        \"tex\": \"\\\\leftrightarrow\"\n      }, {\n        \"asciimath\": \"rArr\",\n        \"tex\": \"\\\\Rightarrow\"\n      }, {\n        \"asciimath\": \"lArr\",\n        \"tex\": \"\\\\Leftarrow\"\n      }, {\n        \"asciimath\": \"hArr\",\n        \"tex\": \"\\\\Leftrightarrow\"\n      }, {\n        \"asciimath\": \"ast\",\n        \"tex\": \"\\\\ast\"\n      }, {\n        \"asciimath\": \"***\",\n        \"tex\": \"\\\\star\"\n      }, {\n        \"asciimath\": \"|><\",\n        \"tex\": \"\\\\ltimes\"\n      }, {\n        \"asciimath\": \"><|\",\n        \"tex\": \"\\\\rtimes\"\n      }, {\n        \"asciimath\": \"^^^\",\n        \"tex\": \"\\\\bigwedge\"\n      }, {\n        \"asciimath\": \"vvv\",\n        \"tex\": \"\\\\bigvee\"\n      }, {\n        \"asciimath\": \"cap\",\n        \"tex\": \"\\\\cap\"\n      }, {\n        \"asciimath\": \"nnn\",\n        \"tex\": \"\\\\bigcap\"\n      }, {\n        \"asciimath\": \"cup\",\n        \"tex\": \"\\\\cup\"\n      }, {\n        \"asciimath\": \"uuu\",\n        \"tex\": \"\\\\bigcup\"\n      }, {\n        \"asciimath\": \"not\",\n        \"tex\": \"\\\\neg\"\n      }, {\n        \"asciimath\": \"<=>\",\n        \"tex\": \"\\\\Leftrightarrow\"\n      }, {\n        \"asciimath\": \"_|_\",\n        \"tex\": \"\\\\bot\"\n      }, {\n        \"asciimath\": \"bot\",\n        \"tex\": \"\\\\bot\"\n      }, {\n        \"asciimath\": \"int\",\n        \"tex\": \"\\\\int\"\n      }, {\n        \"asciimath\": \"del\",\n        \"tex\": \"\\\\partial\"\n      }, {\n        \"asciimath\": \"...\",\n        \"tex\": \"\\\\ldots\"\n      }, {\n        \"asciimath\": \"/_\\\\\",\n        \"tex\": \"\\\\triangle\"\n      }, {\n        \"asciimath\": \"|__\",\n        \"tex\": \"\\\\lfloor\"\n      }, {\n        \"asciimath\": \"__|\",\n        \"tex\": \"\\\\rfloor\"\n      }, {\n        \"asciimath\": \"dim\",\n        \"tex\": \"\\\\dim\"\n      }, {\n        \"asciimath\": \"mod\",\n        \"tex\": \"\\\\operatorname{mod}\"\n      }, {\n        \"asciimath\": \"lub\",\n        \"tex\": \"\\\\operatorname{lub}\"\n      }, {\n        \"asciimath\": \"glb\",\n        \"tex\": \"\\\\operatorname{glb}\"\n      }, {\n        \"asciimath\": \">->\",\n        \"tex\": \"\\\\rightarrowtail\"\n      }, {\n        \"asciimath\": \"->>\",\n        \"tex\": \"\\\\twoheadrightarrow\"\n      }, {\n        \"asciimath\": \"|->\",\n        \"tex\": \"\\\\mapsto\"\n      }, {\n        \"asciimath\": \"lim\",\n        \"tex\": \"\\\\lim\"\n      }, {\n        \"asciimath\": \"Lim\",\n        \"tex\": \"\\\\operatorname{Lim}\"\n      }, {\n        \"asciimath\": \"and\",\n        \"tex\": \"\\\\quad\\\\text{and}\\\\quad\"\n      }, {\n        \"asciimath\": \"**\",\n        \"tex\": \"\\\\ast\"\n      }, {\n        \"asciimath\": \"//\",\n        \"tex\": \"/\"\n      }, {\n        \"asciimath\": \"\\\\\",\n        \"tex\": \"\\\\,\"\n      }, {\n        \"asciimath\": \"\\\\\\\\\",\n        \"tex\": \"\\\\backslash\"\n      }, {\n        \"asciimath\": \"xx\",\n        \"tex\": \"\\\\times\"\n      }, {\n        \"asciimath\": \"-:\",\n        \"tex\": \"\\\\div\"\n      }, {\n        \"asciimath\": \"o+\",\n        \"tex\": \"\\\\oplus\"\n      }, {\n        \"asciimath\": \"ox\",\n        \"tex\": \"\\\\otimes\"\n      }, {\n        \"asciimath\": \"o.\",\n        \"tex\": \"\\\\odot\"\n      }, {\n        \"asciimath\": \"^\",\n        \"tex\": \"\\\\hat{}\"\n      }, {\n        \"asciimath\": \"_\",\n        \"tex\": \"\\\\_\"\n      }, {\n        \"asciimath\": \"^^\",\n        \"tex\": \"\\\\wedge\"\n      }, {\n        \"asciimath\": \"vv\",\n        \"tex\": \"\\\\vee\"\n      }, {\n        \"asciimath\": \"nn\",\n        \"tex\": \"\\\\cap\"\n      }, {\n        \"asciimath\": \"uu\",\n        \"tex\": \"\\\\cup\"\n      }, {\n        \"asciimath\": \"TT\",\n        \"tex\": \"\\\\top\"\n      }, {\n        \"asciimath\": \"+-\",\n        \"tex\": \"\\\\pm\"\n      }, {\n        \"asciimath\": \"O/\",\n        \"tex\": \"\\\\emptyset\"\n      }, {\n        \"asciimath\": \"oo\",\n        \"tex\": \"\\\\infty\"\n      }, {\n        \"asciimath\": \":.\",\n        \"tex\": \"\\\\therefore\"\n      }, {\n        \"asciimath\": \":'\",\n        \"tex\": \"\\\\because\"\n      }, {\n        \"asciimath\": \"/_\",\n        \"tex\": \"\\\\angle\"\n      }, {\n        \"asciimath\": \"|~\",\n        \"tex\": \"\\\\lceil\"\n      }, {\n        \"asciimath\": \"~|\",\n        \"tex\": \"\\\\rceil\"\n      }, {\n        \"asciimath\": \"CC\",\n        \"tex\": \"\\\\mathbb{C}\"\n      }, {\n        \"asciimath\": \"NN\",\n        \"tex\": \"\\\\mathbb{N}\"\n      }, {\n        \"asciimath\": \"QQ\",\n        \"tex\": \"\\\\mathbb{Q}\"\n      }, {\n        \"asciimath\": \"RR\",\n        \"tex\": \"\\\\mathbb{R}\"\n      }, {\n        \"asciimath\": \"ZZ\",\n        \"tex\": \"\\\\mathbb{Z}\"\n      }, {\n        \"asciimath\": \"->\",\n        \"tex\": \"\\\\to\"\n      }, {\n        \"asciimath\": \"or\",\n        \"tex\": \"\\\\quad\\\\text{or}\\\\quad\"\n      }, {\n        \"asciimath\": \"if\",\n        \"tex\": \"\\\\quad\\\\text{if}\\\\quad\"\n      }, {\n        \"asciimath\": \"iff\",\n        \"tex\": \"\\\\iff\"\n      }, {\n        \"asciimath\": \"*\",\n        \"tex\": \"\\\\cdot\"\n      }, {\n        \"asciimath\": \"@\",\n        \"tex\": \"\\\\circ\"\n      }, {\n        \"asciimath\": \"%\",\n        \"tex\": \"\\\\%\"\n      }, {\n        \"asciimath\": \"boxempty\",\n        \"tex\": \"\\\\square\"\n      }, {\n        \"asciimath\": \"lambda\",\n        \"tex\": \"\\\\lambda\"\n      }, {\n        \"asciimath\": \"Lambda\",\n        \"tex\": \"\\\\Lambda\"\n      }, {\n        \"asciimath\": \"nabla\",\n        \"tex\": \"\\\\nabla\"\n      }, {\n        \"asciimath\": \"uparrow\",\n        \"tex\": \"\\\\uparrow\"\n      }, {\n        \"asciimath\": \"downarrow\",\n        \"tex\": \"\\\\downarrow\"\n      }, {\n        \"asciimath\": \"twoheadrightarrowtail\",\n        \"tex\": \"\\\\twoheadrightarrowtail\"\n      }, {\n        \"asciimath\": \"ltimes\",\n        \"tex\": \"\\\\ltimes\"\n      }, {\n        \"asciimath\": \"rtimes\",\n        \"tex\": \"\\\\rtimes\"\n      }, {\n        \"asciimath\": \"neg\",\n        \"tex\": \"\\\\neg\"\n      }, {\n        \"asciimath\": \"partial\",\n        \"tex\": \"\\\\partial\"\n      }, {\n        \"asciimath\": \"ldots\",\n        \"tex\": \"\\\\ldots\"\n      }, {\n        \"asciimath\": \"triangle\",\n        \"tex\": \"\\\\triangle\"\n      }, {\n        \"asciimath\": \"lfloor\",\n        \"tex\": \"\\\\lfloor\"\n      }, {\n        \"asciimath\": \"rfloor\",\n        \"tex\": \"\\\\rfloor\"\n      }, {\n        \"asciimath\": \"rightarrowtail\",\n        \"tex\": \"\\\\rightarrowtail\"\n      }, {\n        \"asciimath\": \"twoheadrightarrow\",\n        \"tex\": \"\\\\twoheadrightarrow\"\n      }, {\n        \"asciimath\": \"mapsto\",\n        \"tex\": \"\\\\mapsto\"\n      }, {\n        \"asciimath\": \"times\",\n        \"tex\": \"\\\\times\"\n      }, {\n        \"asciimath\": \"div\",\n        \"tex\": \"\\\\div\"\n      }, {\n        \"asciimath\": \"divide\",\n        \"tex\": \"\\\\div\"\n      }, {\n        \"asciimath\": \"oplus\",\n        \"tex\": \"\\\\oplus\"\n      }, {\n        \"asciimath\": \"otimes\",\n        \"tex\": \"\\\\otimes\"\n      }, {\n        \"asciimath\": \"odot\",\n        \"tex\": \"\\\\odot\"\n      }, {\n        \"asciimath\": \"wedge\",\n        \"tex\": \"\\\\wedge\"\n      }, {\n        \"asciimath\": \"vee\",\n        \"tex\": \"\\\\vee\"\n      }, {\n        \"asciimath\": \"top\",\n        \"tex\": \"\\\\top\"\n      }, {\n        \"asciimath\": \"pm\",\n        \"tex\": \"\\\\pm\"\n      }, {\n        \"asciimath\": \"emptyset\",\n        \"tex\": \"\\\\emptyset\"\n      }, {\n        \"asciimath\": \"infty\",\n        \"tex\": \"\\\\infty\"\n      }, {\n        \"asciimath\": \"therefore\",\n        \"tex\": \"\\\\therefore\"\n      }, {\n        \"asciimath\": \"because\",\n        \"tex\": \"\\\\because\"\n      }, {\n        \"asciimath\": \"lceil\",\n        \"tex\": \"\\\\lceil\"\n      }, {\n        \"asciimath\": \"rceil\",\n        \"tex\": \"\\\\rceil\"\n      }, {\n        \"asciimath\": \"to\",\n        \"tex\": \"\\\\to\"\n      }, {\n        \"asciimath\": \"langle\",\n        \"tex\": \"\\\\langle\"\n      }, {\n        \"asciimath\": \"lceiling\",\n        \"tex\": \"\\\\lceil\"\n      }, {\n        \"asciimath\": \"rceiling\",\n        \"tex\": \"\\\\rceil\"\n      }, {\n        \"asciimath\": \"max\",\n        \"tex\": \"\\\\max\"\n      }, {\n        \"asciimath\": \"min\",\n        \"tex\": \"\\\\min\"\n      }, {\n        \"asciimath\": \"prod\",\n        \"tex\": \"\\\\prod\"\n      }, {\n        \"asciimath\": \"sum\",\n        \"tex\": \"\\\\sum\"\n      }];\n      this.constants = this.constants.concat(this.relations);\n      this.left_brackets = [{\n        asciimath: 'langle',\n        tex: '\\\\langle'\n      }, {\n        asciimath: '(:',\n        tex: '\\\\langle'\n      }, {\n        asciimath: '<<',\n        tex: '\\\\langle'\n      }, {\n        asciimath: '{:',\n        tex: '.'\n      }, {\n        asciimath: '(',\n        tex: '('\n      }, {\n        asciimath: '[',\n        tex: '['\n      }, {\n        asciimath: '{',\n        tex: '\\\\lbrace'\n      }, {\n        asciimath: 'lbrace',\n        tex: '\\\\lbrace'\n      }];\n      this.right_brackets = [{\n        asciimath: 'rangle',\n        tex: '\\\\rangle'\n      }, {\n        asciimath: ':)',\n        tex: '\\\\rangle'\n      }, {\n        asciimath: '>>',\n        tex: '\\\\rangle'\n      }, {\n        asciimath: ':}',\n        tex: '.',\n        free_tex: ':\\\\}'\n      }, {\n        asciimath: ')',\n        tex: ')'\n      }, {\n        asciimath: ']',\n        tex: ']'\n      }, {\n        asciimath: '}',\n        tex: '\\\\rbrace'\n      }, {\n        asciimath: 'rbrace',\n        tex: '\\\\rbrace'\n      }];\n      this.leftright_brackets = [{\n        asciimath: '|',\n        left_tex: '\\\\lvert',\n        right_tex: '\\\\rvert',\n        free_tex: '|'\n      }];\n      this.unary_symbols = [{\n        asciimath: \"sqrt\",\n        tex: \"\\\\sqrt\"\n      }, {\n        asciimath: \"f\",\n        tex: \"f\",\n        func: true\n      }, {\n        asciimath: \"g\",\n        tex: \"g\",\n        func: true\n      }, {\n        asciimath: \"sin\",\n        tex: \"\\\\sin\",\n        func: true\n      }, {\n        asciimath: \"cos\",\n        tex: \"\\\\cos\",\n        func: true\n      }, {\n        asciimath: \"tan\",\n        tex: \"\\\\tan\",\n        func: true\n      }, {\n        asciimath: \"arcsin\",\n        tex: \"\\\\arcsin\",\n        func: true\n      }, {\n        asciimath: \"arccos\",\n        tex: \"\\\\arccos\",\n        func: true\n      }, {\n        asciimath: \"arctan\",\n        tex: \"\\\\arctan\",\n        func: true\n      }, {\n        asciimath: \"sinh\",\n        tex: \"\\\\sinh\",\n        func: true\n      }, {\n        asciimath: \"cosh\",\n        tex: \"\\\\cosh\",\n        func: true\n      }, {\n        asciimath: \"tanh\",\n        tex: \"\\\\tanh\",\n        func: true\n      }, {\n        asciimath: \"cot\",\n        tex: \"\\\\cot\",\n        func: true\n      }, {\n        asciimath: \"coth\",\n        tex: \"\\\\coth\",\n        func: true\n      }, {\n        asciimath: \"sech\",\n        tex: \"\\\\operatorname{sech}\",\n        func: true\n      }, {\n        asciimath: \"csch\",\n        tex: \"\\\\operatorname{csch}\",\n        func: true\n      }, {\n        asciimath: \"sec\",\n        tex: \"\\\\sec\",\n        func: true\n      }, {\n        asciimath: \"csc\",\n        tex: \"\\\\csc\",\n        func: true\n      }, {\n        asciimath: \"log\",\n        tex: \"\\\\log\",\n        func: true\n      }, {\n        asciimath: \"ln\",\n        tex: \"\\\\ln\",\n        func: true\n      }, {\n        asciimath: \"abs\",\n        rewriteleftright: [\"|\", \"|\"]\n      }, {\n        asciimath: \"norm\",\n        rewriteleftright: [\"\\\\|\", \"\\\\|\"]\n      }, {\n        asciimath: \"floor\",\n        rewriteleftright: [\"\\\\lfloor\", \"\\\\rfloor\"]\n      }, {\n        asciimath: \"ceil\",\n        rewriteleftright: [\"\\\\lceil\", \"\\\\rceil\"]\n      }, {\n        asciimath: \"Sin\",\n        tex: \"\\\\Sin\",\n        func: true\n      }, {\n        asciimath: \"Cos\",\n        tex: \"\\\\Cos\",\n        func: true\n      }, {\n        asciimath: \"Tan\",\n        tex: \"\\\\Tan\",\n        func: true\n      }, {\n        asciimath: \"Arcsin\",\n        tex: \"\\\\Arcsin\",\n        func: true\n      }, {\n        asciimath: \"Arccos\",\n        tex: \"\\\\Arccos\",\n        func: true\n      }, {\n        asciimath: \"Arctan\",\n        tex: \"\\\\Arctan\",\n        func: true\n      }, {\n        asciimath: \"Sinh\",\n        tex: \"\\\\Sinh\",\n        func: true\n      }, {\n        asciimath: \"Cosh\",\n        tex: \"\\\\Cosh\",\n        func: true\n      }, {\n        asciimath: \"Tanh\",\n        tex: \"\\\\Tanh\",\n        func: true\n      }, {\n        asciimath: \"Cot\",\n        tex: \"\\\\Cot\",\n        func: true\n      }, {\n        asciimath: \"Sec\",\n        tex: \"\\\\Sec\",\n        func: true\n      }, {\n        asciimath: \"Csc\",\n        tex: \"\\\\Csc\",\n        func: true\n      }, {\n        asciimath: \"Log\",\n        tex: \"\\\\Log\",\n        func: true\n      }, {\n        asciimath: \"Ln\",\n        tex: \"\\\\Ln\",\n        func: true\n      }, {\n        asciimath: \"Abs\",\n        tex: \"\\\\Abs\",\n        rewriteleftright: [\"|\", \"|\"]\n      }, {\n        asciimath: \"det\",\n        tex: \"\\\\det\",\n        func: true\n      }, {\n        asciimath: \"exp\",\n        tex: \"\\\\exp\",\n        func: true\n      }, {\n        asciimath: \"gcd\",\n        tex: \"\\\\gcd\",\n        func: true\n      }, {\n        asciimath: \"lcm\",\n        tex: \"\\\\operatorname{lcm}\",\n        func: true\n      }, {\n        asciimath: \"cancel\",\n        tex: \"\\\\cancel\"\n      }, {\n        asciimath: \"Sqrt\",\n        tex: \"\\\\Sqrt\"\n      }, {\n        asciimath: \"hat\",\n        tex: \"\\\\hat\",\n        acc: true\n      }, {\n        asciimath: \"bar\",\n        tex: \"\\\\overline\",\n        acc: true\n      }, {\n        asciimath: \"overline\",\n        tex: \"\\\\overline\",\n        acc: true\n      }, {\n        asciimath: \"vec\",\n        tex: \"\\\\vec\",\n        acc: true\n      }, {\n        asciimath: \"tilde\",\n        tex: \"\\\\tilde\",\n        acc: true\n      }, {\n        asciimath: \"dot\",\n        tex: \"\\\\dot\",\n        acc: true\n      }, {\n        asciimath: \"ddot\",\n        tex: \"\\\\ddot\",\n        acc: true\n      }, {\n        asciimath: \"ul\",\n        tex: \"\\\\underline\",\n        acc: true\n      }, {\n        asciimath: \"underline\",\n        tex: \"\\\\underline\",\n        acc: true\n      }, {\n        asciimath: \"ubrace\",\n        tex: \"\\\\underbrace\",\n        acc: true\n      }, {\n        asciimath: \"underbrace\",\n        tex: \"\\\\underbrace\",\n        acc: true\n      }, {\n        asciimath: \"obrace\",\n        tex: \"\\\\overbrace\",\n        acc: true\n      }, {\n        asciimath: \"overbrace\",\n        tex: \"\\\\overbrace\",\n        acc: true\n      }, {\n        asciimath: \"bb\",\n        atname: \"mathvariant\",\n        atval: \"bold\",\n        tex: \"\\\\mathbf\"\n      }, {\n        asciimath: \"mathbf\",\n        atname: \"mathvariant\",\n        atval: \"bold\",\n        tex: \"mathbf\"\n      }, {\n        asciimath: \"sf\",\n        atname: \"mathvariant\",\n        atval: \"sans-serif\",\n        tex: \"\\\\mathsf\"\n      }, {\n        asciimath: \"mathsf\",\n        atname: \"mathvariant\",\n        atval: \"sans-serif\",\n        tex: \"mathsf\"\n      }, {\n        asciimath: \"bbb\",\n        atname: \"mathvariant\",\n        atval: \"double-struck\",\n        tex: \"\\\\mathbb\"\n      }, {\n        asciimath: \"mathbb\",\n        atname: \"mathvariant\",\n        atval: \"double-struck\",\n        tex: \"\\\\mathbb\"\n      }, {\n        asciimath: \"cc\",\n        atname: \"mathvariant\",\n        atval: \"script\",\n        tex: \"\\\\mathcal\"\n      }, {\n        asciimath: \"mathcal\",\n        atname: \"mathvariant\",\n        atval: \"script\",\n        tex: \"\\\\mathcal\"\n      }, {\n        asciimath: \"tt\",\n        atname: \"mathvariant\",\n        atval: \"monospace\",\n        tex: \"\\\\mathtt\"\n      }, {\n        asciimath: \"mathtt\",\n        atname: \"mathvariant\",\n        atval: \"monospace\",\n        tex: \"\\\\mathtt\"\n      }, {\n        asciimath: \"fr\",\n        atname: \"mathvariant\",\n        atval: \"fraktur\",\n        tex: \"\\\\mathfrak\"\n      }, {\n        asciimath: \"mathfrak\",\n        atname: \"mathvariant\",\n        atval: \"fraktur\",\n        tex: \"\\\\mathfrak\"\n      }];\n      this.binary_symbols = [{\n        asciimath: \"root\",\n        tex: \"\\\\sqrt\",\n        option: true\n      }, {\n        asciimath: \"frac\",\n        tex: \"\\\\frac\"\n      }, {\n        asciimath: \"stackrel\",\n        tex: \"\\\\stackrel\"\n      }, {\n        asciimath: \"overset\",\n        tex: \"\\\\overset\"\n      }, {\n        asciimath: \"underset\",\n        tex: \"\\\\underset\"\n      }, {\n        asciimath: \"color\",\n        tex: \"\\\\color\",\n        rawfirst: true\n      }];\n      this.non_constant_symbols = ['_', '^', '/'];\n    }\n  }, {\n    key: \"sort_symbols\",\n    value: function sort_symbols() {\n      var by_asciimath = function by_asciimath(a, b) {\n        a = a.asciimath.length, b = b.asciimath.length;\n        return a > b ? -1 : a < b ? 1 : 0;\n      };\n\n      this.constants.sort(by_asciimath);\n      this.relations.sort(by_asciimath);\n      this.left_brackets.sort(by_asciimath);\n      this.right_brackets.sort(by_asciimath);\n      this.leftright_brackets.sort(by_asciimath);\n      this.unary_symbols.sort(by_asciimath);\n      this.binary_symbols.sort(by_asciimath);\n    }\n  }, {\n    key: \"error\",\n    value: function error(message, pos) {\n      var neighbourhood = this.source(pos).slice(0, 5);\n      throw new Error(\"Error at character \".concat(pos, \" near \\\"\").concat(neighbourhood, \"\\\": \").concat(message));\n    }\n  }, {\n    key: \"literal\",\n    value: function literal(token) {\n      if (token) {\n        return {\n          tex: token.token,\n          pos: token.pos,\n          end: token.end,\n          ttype: 'literal'\n        };\n      }\n    }\n  }, {\n    key: \"longest\",\n    value: function longest(matches) {\n      matches = matches.filter(function (x) {\n        return !!x;\n      });\n      matches.sort(function (x, y) {\n        x = x.end;\n        y = y.end;\n        return x > y ? -1 : x < y ? 1 : 0;\n      });\n      return matches[0];\n    }\n  }, {\n    key: \"escape_text\",\n    value: function escape_text(str) {\n      return str.replace(/\\{/g, '\\\\{').replace(/\\}/g, '\\\\}');\n    }\n  }, {\n    key: \"input\",\n    value: function input(str) {\n      this._source = str;\n      this.brackets = [];\n    }\n  }, {\n    key: \"source\",\n    value: function source() {\n      var pos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var end = arguments.length > 1 ? arguments[1] : undefined;\n\n      if (arguments.length > 1) {\n        return this._source.slice(pos, end);\n      } else {\n        return this._source.slice(pos);\n      }\n    }\n  }, {\n    key: \"eof\",\n    value: function eof() {\n      var pos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      pos = this.strip_space(pos);\n      return pos == this._source.length;\n    }\n  }, {\n    key: \"unbracket\",\n    value: function unbracket(tok) {\n      if (!tok) {\n        return;\n      }\n\n      if (!tok.bracket) {\n        return tok;\n      }\n\n      var skip_brackets = ['(', ')', '[', ']', '{', '}'];\n      var skipleft = skip_brackets.includes(tok.left.asciimath);\n      var skipright = skip_brackets.includes(tok.right.asciimath);\n      var pos = skipleft ? tok.left.end : tok.pos;\n      var end = skipright ? tok.right.pos : tok.end;\n      var left = skipleft ? '' : tok.left.tex;\n      var right = skipright ? '' : tok.right.tex;\n      var middle = tok.middle ? tok.middle.tex : '';\n\n      if (left || right) {\n        left = left || '.';\n        right = right || '.';\n        return {\n          tex: \"\\\\left \".concat(left, \" \").concat(middle, \" \\\\right \").concat(right),\n          pos: tok.pos,\n          end: tok.end\n        };\n      } else {\n        return {\n          tex: middle,\n          pos: tok.pos,\n          end: tok.end,\n          middle_asciimath: this.source(pos, end)\n        };\n      }\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(str) {\n      this.input(str);\n      var result = this.consume();\n      return result.tex;\n    }\n  }, {\n    key: \"consume\",\n    value: function consume() {\n      var pos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var tex = '';\n      var exprs = [];\n\n      while (!this.eof(pos)) {\n        var expr = this.expression_list(pos);\n\n        if (!expr) {\n          var rb = this.right_bracket(pos);\n\n          if (rb) {\n            if (rb.def.free_tex) {\n              rb.tex = rb.def.free_tex;\n            }\n\n            expr = rb;\n          }\n\n          var lr = this.leftright_bracket(pos);\n\n          if (lr) {\n            expr = lr;\n            var ss = this.subsup(lr.end);\n\n            if (ss) {\n              expr = {\n                tex: \"\".concat(expr.tex).concat(ss.tex),\n                pos: pos,\n                end: ss.end,\n                ttype: 'expression'\n              };\n            }\n          }\n        }\n\n        if (expr) {\n          if (tex) {\n            tex += ' ';\n          }\n\n          tex += expr.tex;\n          pos = expr.end;\n          exprs.push(expr);\n        } else if (!this.eof(pos)) {\n          throw new Error(\"Didn't EOF: \", this.source(pos));\n        }\n      }\n\n      return {\n        tex: tex,\n        exprs: exprs\n      };\n    }\n  }, {\n    key: \"strip_space\",\n    value: function strip_space() {\n      var pos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var osource = this.source(pos);\n      var reduced = osource.replace(/^(\\s|\\\\(?!\\\\))*/, '');\n      return pos + osource.length - reduced.length;\n    }\n    /* Does the given regex match next?\n     */\n\n  }, {\n    key: \"match\",\n    value: function match(re, pos) {\n      pos = this.strip_space(pos);\n      var m = re.exec(this.source(pos));\n\n      if (m) {\n        var token = m[0];\n        return {\n          token: token,\n          pos: pos,\n          match: m,\n          end: pos + token.length,\n          ttype: 'regex'\n        };\n      }\n    }\n    /* Does the exact given string occur next?\n     */\n\n  }, {\n    key: \"exact\",\n    value: function exact(str, pos) {\n      pos = this.strip_space(pos);\n\n      if (this.source(pos).slice(0, str.length) == str) {\n        return {\n          token: str,\n          pos: pos,\n          end: pos + str.length,\n          ttype: 'exact'\n        };\n      }\n    }\n  }, {\n    key: \"expression_list\",\n    value: function expression_list() {\n      var pos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var expr = this.expression(pos);\n\n      if (!expr) {\n        return;\n      }\n\n      var end = expr.end;\n      var tex = expr.tex;\n      var exprs = [expr];\n\n      while (!this.eof(end)) {\n        var comma = this.exact(\",\", end);\n\n        if (!comma) {\n          break;\n        }\n\n        tex += ' ,';\n        end = comma.end;\n        expr = this.expression(end);\n\n        if (!expr) {\n          break;\n        }\n\n        tex += ' ' + expr.tex;\n        exprs.push(expr);\n        end = expr.end;\n      }\n\n      return {\n        tex: tex,\n        pos: pos,\n        end: end,\n        exprs: exprs,\n        ttype: 'expression_list'\n      };\n    } // E ::= IE | I/I                       Expression\n\n  }, {\n    key: \"expression\",\n    value: function expression() {\n      var pos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var negative = this.negative_expression(pos);\n\n      if (negative) {\n        return negative;\n      }\n\n      var first = this.intermediate_or_fraction(pos);\n\n      if (!first) {\n        var _iterator = _createForOfIteratorHelper(this.non_constant_symbols),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var c = _step.value;\n            var m = this.exact(c, pos);\n\n            if (m) {\n              return {\n                tex: c,\n                pos: pos,\n                end: m.end,\n                ttype: 'constant'\n              };\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        return;\n      }\n\n      if (this.eof(first.end)) {\n        return first;\n      }\n\n      var second = this.expression(first.end);\n\n      if (second) {\n        return {\n          tex: first.tex + ' ' + second.tex,\n          pos: first.pos,\n          end: second.end,\n          ttype: 'expression',\n          exprs: [first, second]\n        };\n      } else {\n        return first;\n      }\n    }\n  }, {\n    key: \"negative_expression\",\n    value: function negative_expression() {\n      var pos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var dash = this.exact(\"-\", pos);\n\n      if (dash && !this.other_constant(pos)) {\n        var expr = this.expression(dash.end);\n\n        if (expr) {\n          return {\n            tex: \"- \".concat(expr.tex),\n            pos: pos,\n            end: expr.end,\n            ttype: 'negative_expression',\n            dash: dash,\n            expression: expr\n          };\n        } else {\n          return {\n            tex: '-',\n            pos: pos,\n            end: dash.end,\n            ttype: 'constant'\n          };\n        }\n      }\n    }\n  }, {\n    key: \"intermediate_or_fraction\",\n    value: function intermediate_or_fraction() {\n      var pos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var first = this.intermediate(pos);\n\n      if (!first) {\n        return;\n      }\n\n      var frac = this.match(/^\\/(?!\\/)/, first.end);\n\n      if (frac) {\n        var second = this.intermediate(frac.end);\n\n        if (second) {\n          var ufirst = this.unbracket(first);\n          var usecond = this.unbracket(second);\n          return {\n            tex: \"\\\\frac{\".concat(ufirst.tex, \"}{\").concat(usecond.tex, \"}\"),\n            pos: first.pos,\n            end: second.end,\n            ttype: 'fraction',\n            numerator: ufirst,\n            denominator: usecond\n          };\n        } else {\n          var _ufirst = this.unbracket(first);\n\n          return {\n            tex: \"\\\\frac{\".concat(_ufirst.tex, \"}{}\"),\n            pos: first.pos,\n            end: frac.end,\n            ttype: 'fraction',\n            numerator: _ufirst,\n            denominator: null\n          };\n        }\n      } else {\n        return first;\n      }\n    } // I ::= S_S | S^S | S_S^S | S          Intermediate expression\n\n  }, {\n    key: \"intermediate\",\n    value: function intermediate() {\n      var pos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var first = this.simple(pos);\n\n      if (!first) {\n        return;\n      }\n\n      var ss = this.subsup(first.end);\n\n      if (ss) {\n        return {\n          tex: \"\".concat(first.tex).concat(ss.tex),\n          pos: pos,\n          end: ss.end,\n          ttype: 'intermediate',\n          expression: first,\n          subsup: ss\n        };\n      } else {\n        return first;\n      }\n    }\n  }, {\n    key: \"subsup\",\n    value: function subsup() {\n      var pos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var tex = '';\n      var end = pos;\n      var sub = this.exact('_', pos);\n      var sub_expr, sup_expr;\n\n      if (sub) {\n        sub_expr = this.unbracket(this.simple(sub.end));\n\n        if (sub_expr) {\n          tex = \"\".concat(tex, \"_{\").concat(sub_expr.tex, \"}\");\n          end = sub_expr.end;\n        } else {\n          tex = \"\".concat(tex, \"_{}\");\n          end = sub.end;\n        }\n      }\n\n      var sup = this.match(/^\\^(?!\\^)/, end);\n\n      if (sup) {\n        sup_expr = this.unbracket(this.simple(sup.end));\n\n        if (sup_expr) {\n          tex = \"\".concat(tex, \"^{\").concat(sup_expr.tex, \"}\");\n          end = sup_expr.end;\n        } else {\n          tex = \"\".concat(tex, \"^{}\");\n          end = sup.end;\n        }\n      }\n\n      if (sub || sup) {\n        return {\n          tex: tex,\n          pos: pos,\n          end: end,\n          ttype: 'subsup',\n          sub: sub_expr,\n          sup: sup_expr\n        };\n      }\n    } // S ::= v | lEr | uS | bSS             Simple expression\n\n  }, {\n    key: \"simple\",\n    value: function simple() {\n      var pos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      return this.longest([this.matrix(pos), this.bracketed_expression(pos), this.binary(pos), this.constant(pos), this.text(pos), this.unary(pos), this.negative_simple(pos)]);\n    }\n  }, {\n    key: \"negative_simple\",\n    value: function negative_simple() {\n      var pos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var dash = this.exact(\"-\", pos);\n\n      if (dash && !this.other_constant(pos)) {\n        var expr = this.simple(dash.end);\n\n        if (expr) {\n          return {\n            tex: \"- \".concat(expr.tex),\n            pos: pos,\n            end: expr.end,\n            ttype: 'negative_simple',\n            dash: dash,\n            expr: expr\n          };\n        } else {\n          return {\n            tex: '-',\n            pos: pos,\n            end: dash.end,\n            ttype: 'constant'\n          };\n        }\n      }\n    } // matrix: leftbracket \"(\" expr \")\" (\",\" \"(\" expr \")\")* rightbracket \n    // each row must have the same number of elements\n\n  }, {\n    key: \"matrix\",\n    value: function matrix() {\n      var pos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var left = this.left_bracket(pos);\n      var lr = false;\n\n      if (!left) {\n        left = this.leftright_bracket(pos, 'left');\n\n        if (!left) {\n          return;\n        }\n\n        lr = true;\n      }\n\n      var contents = this.matrix_contents(left.end, lr);\n\n      if (!contents) {\n        return;\n      }\n\n      var right = lr ? this.leftright_bracket(contents.end, 'right') : this.right_bracket(contents.end);\n\n      if (!right) {\n        return;\n      }\n\n      var contents_tex = contents.rows.map(function (r) {\n        return r.tex;\n      }).join(' \\\\\\\\ ');\n      var matrix_tex = contents.is_array ? \"\\\\begin{array}{\".concat(contents.column_desc, \"} \").concat(contents_tex, \" \\\\end{array}\") : \"\\\\begin{matrix} \".concat(contents_tex, \" \\\\end{matrix}\");\n      return {\n        tex: \"\\\\left \".concat(left.tex, \" \").concat(matrix_tex, \" \\\\right \").concat(right.tex),\n        pos: pos,\n        end: right.end,\n        ttype: 'matrix',\n        rows: contents.rows,\n        left: left,\n        right: right\n      };\n    }\n  }, {\n    key: \"matrix_contents\",\n    value: function matrix_contents() {\n      var pos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var leftright = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var rows = [];\n      var end = pos;\n      var row_length = undefined;\n      var column_desc = undefined;\n      var is_array = false;\n\n      while (!this.eof(end) && !(leftright ? this.leftright_bracket(end) : this.right_bracket(end))) {\n        if (rows.length) {\n          var comma = this.exact(\",\", end);\n\n          if (!comma) {\n            return;\n          }\n\n          end = comma.end;\n        }\n\n        var lb = this.match(/^[(\\[]/, end);\n\n        if (!lb) {\n          return;\n        }\n\n        var cells = [];\n        var columns = [];\n        end = lb.end;\n\n        while (!this.eof(end)) {\n          if (cells.length) {\n            var _comma = this.exact(\",\", end);\n\n            if (!_comma) {\n              break;\n            }\n\n            end = _comma.end;\n          }\n\n          var cell = this.matrix_cell(end);\n\n          if (!cell) {\n            break;\n          }\n\n          if (cell.ttype == 'column') {\n            columns.push('|');\n            is_array = true;\n\n            if (cell.expr !== null) {\n              columns.push('r');\n              cells.push(cell.expr);\n            }\n          } else {\n            columns.push('r');\n            cells.push(cell);\n          }\n\n          end = cell.end;\n        }\n\n        if (!cells.length) {\n          return;\n        }\n\n        if (row_length === undefined) {\n          row_length = cells.length;\n        } else if (cells.length != row_length) {\n          return;\n        }\n\n        var rb = this.match(/^[)\\]]/, end);\n\n        if (!rb) {\n          return;\n        }\n\n        var row_column_desc = columns.join('');\n\n        if (column_desc === undefined) {\n          column_desc = row_column_desc;\n        } else if (row_column_desc != column_desc) {\n          return;\n        }\n\n        rows.push({\n          ttype: 'row',\n          tex: cells.map(function (c) {\n            return c.tex;\n          }).join(' & '),\n          pos: lb.end,\n          end: end,\n          cells: cells\n        });\n        end = rb.end;\n      }\n\n      if (row_length === undefined || row_length <= 1 && rows.length <= 1) {\n        return;\n      }\n\n      return {\n        rows: rows,\n        end: end,\n        column_desc: column_desc,\n        is_array: is_array\n      };\n    }\n  }, {\n    key: \"matrix_cell\",\n    value: function matrix_cell() {\n      var pos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var lvert = this.exact('|', pos);\n\n      if (lvert) {\n        var middle = this.expression(lvert.end);\n\n        if (middle) {\n          var rvert = this.exact('|', middle.end);\n\n          if (rvert) {\n            var second = this.expression(rvert.end);\n\n            if (second) {\n              return {\n                tex: \"\\\\left \\\\lvert \".concat(middle.tex, \" \\\\right \\\\rvert \").concat(second.text),\n                pos: lvert.pos,\n                end: second.end,\n                ttype: 'expression',\n                exprs: [middle, second]\n              };\n            }\n          } else {\n            return {\n              ttype: 'column',\n              expr: middle,\n              pos: lvert.pos,\n              end: middle.end\n            };\n          }\n        } else {\n          return {\n            ttype: 'column',\n            expr: null,\n            pos: lvert.pos,\n            end: lvert.end\n          };\n        }\n      }\n\n      return this.expression(pos);\n    }\n  }, {\n    key: \"bracketed_expression\",\n    value: function bracketed_expression() {\n      var pos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var l = this.left_bracket(pos);\n\n      if (l) {\n        var middle = this.expression_list(l.end);\n\n        if (middle) {\n          var r = this.right_bracket(middle.end) || this.leftright_bracket(middle.end, 'right');\n\n          if (r) {\n            return {\n              tex: \"\\\\left\".concat(l.tex, \" \").concat(middle.tex, \" \\\\right \").concat(r.tex),\n              pos: pos,\n              end: r.end,\n              bracket: true,\n              left: l,\n              right: r,\n              middle: middle,\n              ttype: 'bracket'\n            };\n          } else if (this.eof(middle.end)) {\n            return {\n              tex: \"\\\\left\".concat(l.tex, \" \").concat(middle.tex, \" \\\\right.\"),\n              pos: pos,\n              end: middle.end,\n              ttype: 'bracket',\n              left: l,\n              right: null,\n              middle: middle\n            };\n          } else {\n            return {\n              tex: \"\".concat(l.tex, \" \").concat(middle.tex),\n              pos: pos,\n              end: middle.end,\n              ttype: 'expression',\n              exprs: [l, middle]\n            };\n          }\n        } else {\n          var _r = this.right_bracket(l.end) || this.leftright_bracket(l.end, 'right');\n\n          if (_r) {\n            return {\n              tex: \"\\\\left \".concat(l.tex, \" \\\\right \").concat(_r.tex),\n              pos: pos,\n              end: _r.end,\n              bracket: true,\n              left: l,\n              right: _r,\n              middle: null,\n              ttype: 'bracket'\n            };\n          } else {\n            return {\n              tex: l.tex,\n              pos: pos,\n              end: l.end,\n              ttype: 'constant'\n            };\n          }\n        }\n      }\n\n      if (this.other_constant(pos)) {\n        return;\n      }\n\n      var left = this.leftright_bracket(pos, 'left');\n\n      if (left) {\n        var _middle = this.expression_list(left.end);\n\n        if (_middle) {\n          var right = this.leftright_bracket(_middle.end, 'right') || this.right_bracket(_middle.end);\n\n          if (right) {\n            return {\n              tex: \"\\\\left \".concat(left.tex, \" \").concat(_middle.tex, \" \\\\right \").concat(right.tex),\n              pos: pos,\n              end: right.end,\n              bracket: true,\n              left: left,\n              right: right,\n              middle: _middle,\n              ttype: 'bracket'\n            };\n          }\n        }\n      }\n    } // r ::= ) | ] | } | :) | :} | other right brackets\n\n  }, {\n    key: \"right_bracket\",\n    value: function right_bracket() {\n      var pos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      var _iterator2 = _createForOfIteratorHelper(this.right_brackets),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var bracket = _step2.value;\n          var m = this.exact(bracket.asciimath, pos);\n\n          if (m) {\n            return {\n              tex: bracket.tex,\n              pos: pos,\n              end: m.end,\n              asciimath: bracket.asciimath,\n              def: bracket,\n              ttype: 'right_bracket'\n            };\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    } // l ::= ( | [ | { | (: | {: | other left brackets\n\n  }, {\n    key: \"left_bracket\",\n    value: function left_bracket() {\n      var pos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      var _iterator3 = _createForOfIteratorHelper(this.left_brackets),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var bracket = _step3.value;\n          var m = this.exact(bracket.asciimath, pos);\n\n          if (m) {\n            return {\n              tex: bracket.tex,\n              pos: pos,\n              end: m.end,\n              asciimath: bracket.asciimath,\n              ttype: 'left_bracket'\n            };\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"leftright_bracket\",\n    value: function leftright_bracket() {\n      var pos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var position = arguments.length > 1 ? arguments[1] : undefined;\n\n      var _iterator4 = _createForOfIteratorHelper(this.leftright_brackets),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var lr = _step4.value;\n          var b = this.exact(lr.asciimath, pos);\n\n          if (b) {\n            return {\n              tex: position == 'left' ? lr.left_tex : position == 'right' ? lr.right_tex : lr.free_tex,\n              pos: pos,\n              end: b.end,\n              ttype: 'leftright_bracket'\n            };\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n    }\n  }, {\n    key: \"text\",\n    value: function text() {\n      var pos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var quoted = this.match(/^\"([^\"]*)\"/, pos);\n\n      if (quoted) {\n        var text = this.escape_text(quoted.match[1]);\n        return {\n          tex: \"\\\\text{\".concat(text, \"}\"),\n          pos: pos,\n          end: quoted.end,\n          ttype: 'text',\n          text: text\n        };\n      }\n\n      var textfn = this.match(/^(?:mbox|text)\\s*(\\([^)]*\\)?|\\{[^}]*\\}?|\\[[^\\]]*\\]?)/, pos);\n\n      if (textfn) {\n        var _text = this.escape_text(textfn.match[1].slice(1, textfn.match[1].length - 1));\n\n        return {\n          tex: \"\\\\text{\".concat(_text, \"}\"),\n          pos: pos,\n          end: textfn.end,\n          ttype: 'text',\n          text: _text\n        };\n      }\n    } // b ::= frac | root | stackrel | other binary symbols\n\n  }, {\n    key: \"binary\",\n    value: function binary() {\n      var pos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      var _iterator5 = _createForOfIteratorHelper(this.binary_symbols),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var binary = _step5.value;\n          var m = this.exact(binary.asciimath, pos);\n\n          var _ref = binary.option ? ['[', ']'] : ['{', '}'],\n              _ref2 = _slicedToArray(_ref, 2),\n              lb1 = _ref2[0],\n              rb1 = _ref2[1];\n\n          if (m) {\n            var a = this.unbracket(this.simple(m.end));\n\n            if (a) {\n              var atex = binary.rawfirst ? a.middle_asciimath : a.tex;\n              var b = this.unbracket(this.simple(a.end));\n\n              if (b) {\n                return {\n                  tex: \"\".concat(binary.tex).concat(lb1).concat(atex).concat(rb1, \"{\").concat(b.tex, \"}\"),\n                  pos: pos,\n                  end: b.end,\n                  ttype: 'binary',\n                  op: binary,\n                  arg1: a,\n                  arg2: b\n                };\n              } else {\n                return {\n                  tex: \"\".concat(binary.tex).concat(lb1).concat(atex).concat(rb1, \"{}\"),\n                  pos: pos,\n                  end: a.end,\n                  ttype: 'binary',\n                  op: binary,\n                  arg1: a,\n                  arg2: null\n                };\n              }\n            } else {\n              return {\n                tex: \"\".concat(binary.tex).concat(lb1).concat(rb1, \"{}\"),\n                pos: pos,\n                end: m.end,\n                ttype: 'binary',\n                op: binary,\n                arg1: null,\n                arg2: null\n              };\n            }\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    } // u ::= sqrt | text | bb | other unary symbols for font commands\n\n  }, {\n    key: \"unary\",\n    value: function unary() {\n      var pos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      var _iterator6 = _createForOfIteratorHelper(this.unary_symbols),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var u = _step6.value;\n          var m = this.exact(u.asciimath, pos);\n\n          if (m) {\n            var ss = this.subsup(m.end);\n            var sstex = ss ? ss.tex : '';\n            var end = ss ? ss.end : m.end;\n            var barg = this.simple(end);\n            var arg = u.func ? barg : this.unbracket(barg);\n            var argtex = arg && (u.raw ? arg.middle_asciimath : arg.tex);\n\n            if (u.rewriteleftright) {\n              var _u$rewriteleftright = _slicedToArray(u.rewriteleftright, 2),\n                  left = _u$rewriteleftright[0],\n                  right = _u$rewriteleftright[1];\n\n              if (arg) {\n                return {\n                  tex: \"\\\\left \".concat(left, \" \").concat(argtex, \" \\\\right \").concat(right, \" \").concat(sstex),\n                  pos: pos,\n                  end: arg.end,\n                  ttype: 'unary',\n                  op: m,\n                  subsup: ss,\n                  arg: arg\n                };\n              } else {\n                return {\n                  tex: \"\\\\left \".concat(left, \" \\\\right \").concat(right, \" \").concat(sstex),\n                  pos: pos,\n                  end: m.end,\n                  ttype: 'unary',\n                  op: m,\n                  subsup: ss,\n                  arg: null\n                };\n              }\n            } else {\n              if (arg) {\n                return {\n                  tex: \"\".concat(u.tex).concat(sstex, \"{\").concat(argtex, \"}\"),\n                  pos: pos,\n                  end: arg.end,\n                  ttype: 'unary',\n                  op: m,\n                  subsup: ss,\n                  arg: arg\n                };\n              } else {\n                return {\n                  tex: \"\".concat(u.tex).concat(sstex, \"{}\"),\n                  pos: pos,\n                  end: m.end,\n                  ttype: 'unary',\n                  op: m,\n                  subsup: ss,\n                  arg: null\n                };\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n    } // v ::= [A-Za-z] | greek letters | numbers | other constant symbols\n\n  }, {\n    key: \"constant\",\n    value: function constant() {\n      var pos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.right_bracket(pos)) {\n        return;\n      }\n\n      return this.longest([this.other_constant(pos), this.greek(pos), this.name(pos), this.number(pos), this.arbitrary_constant(pos)]);\n    }\n  }, {\n    key: \"name\",\n    value: function name() {\n      var pos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      return this.literal(this.match(/^[A-Za-z]/, pos));\n    }\n  }, {\n    key: \"greek\",\n    value: function greek() {\n      var pos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var re_greek = new RegExp('^(' + this.greek_letters.join('|') + ')');\n      var m = this.match(re_greek, pos);\n\n      if (m) {\n        return {\n          tex: '\\\\' + m.token,\n          pos: pos,\n          end: m.end,\n          ttype: 'greek'\n        };\n      }\n    }\n  }, {\n    key: \"number\",\n    value: function number() {\n      var pos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var re_number = new RegExp('^\\\\d+(' + this.decimalsign + '\\\\d+)?');\n      return this.literal(this.match(re_number, pos));\n    }\n  }, {\n    key: \"other_constant\",\n    value: function other_constant() {\n      var pos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      var _iterator7 = _createForOfIteratorHelper(this.relations),\n          _step7;\n\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var sym = _step7.value;\n\n          if (!sym.asciimath.match(/^!/)) {\n            var notm = this.exact('!' + sym.asciimath, pos);\n\n            if (notm) {\n              return {\n                tex: \"\\\\not \".concat(sym.tex),\n                pos: notm.pos,\n                end: notm.end,\n                ttype: 'other_constant'\n              };\n            }\n          }\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n\n      var _iterator8 = _createForOfIteratorHelper(this.constants),\n          _step8;\n\n      try {\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          var _sym = _step8.value;\n          var m = this.exact(_sym.asciimath, pos);\n\n          if (m) {\n            return {\n              tex: \"\".concat(_sym.tex),\n              pos: m.pos,\n              end: m.end,\n              ttype: 'other_constant'\n            };\n          }\n        }\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n    }\n  }, {\n    key: \"arbitrary_constant\",\n    value: function arbitrary_constant() {\n      var pos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (!this.eof(pos)) {\n        if (this.exact(\",\", pos)) {\n          return;\n        }\n\n        var _iterator9 = _createForOfIteratorHelper(this.non_constant_symbols.concat(this.left_brackets.map(function (x) {\n          return x.asciimath;\n        }), this.right_brackets.map(function (x) {\n          return x.asciimath;\n        }), this.leftright_brackets.map(function (x) {\n          return x.asciimath;\n        }))),\n            _step9;\n\n        try {\n          for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n            var nc = _step9.value;\n\n            if (this.exact(nc, pos)) {\n              return;\n            }\n          }\n        } catch (err) {\n          _iterator9.e(err);\n        } finally {\n          _iterator9.f();\n        }\n\n        var spos = this.strip_space(pos);\n        var symbol = this.source(spos).slice(0, 1);\n        return {\n          tex: symbol,\n          pos: pos,\n          end: spos + 1,\n          ttype: 'arbitrary_constant'\n        };\n      }\n    }\n  }]);\n\n  return AsciiMathParser;\n}();\n\nexport { AsciiMathParser as default };","import AsciiMathParser from 'asciimath2tex';\nconst Parser = new AsciiMathParser();\n\nconst Format = (formula) => `$${Parser.parse(formula)}$`;\nexport default Format;\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import React  from 'react';\nimport Latex  from 'react-latex';\nimport Format from '../utils/format';\n\nimport PropTypes from 'prop-types';\n\n\nconst LatexWrapper = ({ block, children }) => (\n  // sets {display: block} if true, otherwise displayed inline\n  <Latex displayMode={block}>\n    {Format(children)}\n  </Latex>\n);\n\nLatexWrapper.propTypes = {\n  block   : PropTypes.bool,\n  children: PropTypes.string.isRequired,\n};\n\nexport default LatexWrapper;\n","\"use strict\";\n\nrequire(\"core-js/modules/es6.array.map\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nrequire(\"core-js/modules/es6.object.create\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _katex = require(\"katex\");\n\nvar _katex2 = _interopRequireDefault(_katex);\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/* eslint-disable eslint-plugin-import */\n// Eslint doesn't like react being in peerDependencies\n//eslint-disable-line\n\n\nvar latexify = function latexify(string, options) {\n  var regularExpression = /\\$\\$[\\s\\S]+?\\$\\$|\\\\\\[[\\s\\S]+?\\\\\\]|\\\\\\([\\s\\S]+?\\\\\\)|\\$[\\s\\S]+?\\$/g;\n  var blockRegularExpression = /\\$\\$[\\s\\S]+?\\$\\$|\\\\\\[[\\s\\S]+?\\\\\\]/g;\n\n  var stripDollars = function stripDollars(stringToStrip) {\n    return stringToStrip[0] === \"$\" && stringToStrip[1] !== \"$\" ? stringToStrip.slice(1, -1) : stringToStrip.slice(2, -2);\n  };\n\n  var getDisplay = function getDisplay(stringToDisplay) {\n    return stringToDisplay.match(blockRegularExpression) ? \"block\" : \"inline\";\n  };\n\n  var renderLatexString = function renderLatexString(s, t) {\n    var renderedString = void 0;\n\n    try {\n      // returns HTML markup\n      renderedString = _katex2[\"default\"].renderToString(s, t === \"block\" ? Object.assign({\n        displayMode: true\n      }, options) : options);\n    } catch (err) {\n      console.error(\"couldn`t convert string\", s);\n      return s;\n    }\n\n    return renderedString;\n  };\n\n  var result = [];\n  var latexMatch = string.match(regularExpression);\n  var stringWithoutLatex = string.split(regularExpression);\n\n  if (latexMatch) {\n    stringWithoutLatex.forEach(function (s, index) {\n      result.push({\n        string: s,\n        type: \"text\"\n      });\n\n      if (latexMatch[index]) {\n        result.push({\n          string: stripDollars(latexMatch[index]),\n          type: getDisplay(latexMatch[index])\n        });\n      }\n    });\n  } else {\n    result.push({\n      string: string,\n      type: \"text\"\n    });\n  }\n\n  var processResult = function processResult(resultToProcess) {\n    var newResult = resultToProcess.map(function (r) {\n      if (r.type === \"text\") {\n        return r.string;\n      }\n\n      return _react2[\"default\"].createElement(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: renderLatexString(r.string, r.type)\n        }\n      });\n    });\n    return newResult;\n  }; // Returns list of spans with latex and non-latex strings.\n\n\n  return processResult(result);\n};\n\nvar Latex = function (_React$Component) {\n  _inherits(Latex, _React$Component);\n\n  function Latex() {\n    _classCallCheck(this, Latex);\n\n    return _possibleConstructorReturn(this, (Latex.__proto__ || Object.getPrototypeOf(Latex)).apply(this, arguments));\n  }\n\n  _createClass(Latex, [{\n    key: \"render\",\n    value: function render() {\n      var _props = this.props,\n          children = _props.children,\n          displayMode = _props.displayMode,\n          leqno = _props.leqno,\n          fleqn = _props.fleqn,\n          throwOnError = _props.throwOnError,\n          errorColor = _props.errorColor,\n          macros = _props.macros,\n          minRuleThickness = _props.minRuleThickness,\n          colorIsTextColor = _props.colorIsTextColor,\n          maxSize = _props.maxSize,\n          maxExpand = _props.maxExpand,\n          strict = _props.strict,\n          trust = _props.trust;\n      var renderUs = latexify(children, {\n        displayMode: displayMode,\n        leqno: leqno,\n        fleqn: fleqn,\n        throwOnError: throwOnError,\n        errorColor: errorColor,\n        macros: macros,\n        minRuleThickness: minRuleThickness,\n        colorIsTextColor: colorIsTextColor,\n        maxSize: maxSize,\n        maxExpand: maxExpand,\n        strict: strict,\n        trust: trust\n      });\n      renderUs.unshift(null);\n      renderUs.unshift('span'); //put everything in a span\n      // spread renderUs out to children args\n\n      return _react2[\"default\"].createElement.apply(null, renderUs);\n    }\n  }]);\n\n  return Latex;\n}(_react2[\"default\"].Component);\n\nLatex.propTypes = {\n  children: _propTypes2[\"default\"].string,\n  displayMode: _propTypes2[\"default\"].bool,\n  leqno: _propTypes2[\"default\"].bool,\n  fleqn: _propTypes2[\"default\"].bool,\n  throwOnError: _propTypes2[\"default\"].bool,\n  errorColor: _propTypes2[\"default\"].string,\n  macros: _propTypes2[\"default\"].object,\n  minRuleThickness: _propTypes2[\"default\"].number,\n  colorIsTextColor: _propTypes2[\"default\"].bool,\n  maxSize: _propTypes2[\"default\"].number,\n  maxExpand: _propTypes2[\"default\"].number,\n  strict: _propTypes2[\"default\"].oneOfType([_propTypes2[\"default\"].bool, _propTypes2[\"default\"].string, _propTypes2[\"default\"].func]),\n  trust: _propTypes2[\"default\"].oneOfType([_propTypes2[\"default\"].bool, _propTypes2[\"default\"].func])\n};\nLatex.defaultProps = {\n  children: \"\",\n  displayMode: false,\n  output: \"htmlAndMathml\",\n  leqno: false,\n  fleqn: false,\n  throwOnError: true,\n  errorColor: \"#cc0000\",\n  macros: {},\n  minRuleThickness: 0,\n  colorIsTextColor: false,\n  strict: \"warn\",\n  trust: false\n};\n\nif (module && module.exports) {\n  module.exports = Latex;\n} else {\n  window.Latex = Latex;\n}","require(\"core-js/modules/es6.object.define-property\");\n\nmodule.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};"],"sourceRoot":""}