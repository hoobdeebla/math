{"version":3,"sources":["webpack:///./src/answers/frac/mult.js","webpack:///./src/answers/frac/add.js","webpack:///./src/answers/frac/sub.js","webpack:///./src/answers/frac.js","webpack:///./src/pages/frac.js"],"names":["MultSolution","nums","k","l","m","n","block","MultAnswer","Mult","AddSolution","AddAnswer","Add","SubSolution","SubAnswer","Sub","Answers","op","title","desc","image","withPrefix","Frac","React","useState","setK","setL","setM","setN","selected","setSelected","select","e","target","value","className","type","onChange","min","max","placeholder","role","data-toggle","name","checked","onClick","Number"],"mappings":"yKAMMA,EAAe,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACdC,EAAeD,EAAfC,EAAGC,EAAYF,EAAZE,EAAGC,EAASH,EAATG,EAAGC,EAAMJ,EAANI,EAEjB,OAAIH,EAAIG,GAAM,EACL,8DAAmC,kBAAC,IAAD,aAAcH,EAAd,IAAmBC,EAAnB,KAAnC,SAAuE,kBAAC,IAAD,WAAYE,EAAZ,KAAvE,kCAA6H,kBAAC,IAAD,qBAAuBH,EAAIG,EAA3B,MAAmCF,EAAnC,KAA7H,iCAAyM,kBAAC,IAAD,WAAYC,EAAZ,KAAzM,oBAGL,oCACE,8DACiC,kBAAC,IAAD,aAAcF,EAAd,IAAmBC,EAAnB,KADjC,SACqE,kBAAC,IAAD,WAAYE,EAAZ,KADrE,gDACyI,kBAAC,IAAD,aAAcH,EAAd,IAAmBC,EAAnB,KADzI,qCACyM,kBAAC,IAAD,WAAYE,EAAZ,KADzM,+EAEgE,kBAAC,IAAD,WAAYH,EAAZ,KAFhE,uBAE2G,kBAAC,IAAD,WAAYG,EAAZ,KAF3G,KAIA,4BACE,kBAAC,IAAD,CAAKC,OAAK,GAAE,6CACZ,kBAAC,IAAD,CAAKA,OAAK,GAAKJ,EAAf,IAAoBC,EAApB,OAA4BD,EAA5B,UAAuCG,EAAvC,MAA8CF,EAA9C,UAAyDE,EAAzD,OAAiEH,EAAIG,EAArE,IAA0EF,EAAIE,IAEhF,sFAA2D,kBAAC,IAAD,WAAYA,EAAZ,KAA3D,kCAAiH,kBAAC,IAAD,gBAAiBH,EAAjB,IAAsBC,EAAIE,EAA1B,KAAjH,kDAAqM,kBAAC,IAAD,WAAYD,EAAZ,KAArM,sBAMFG,EAAa,SAAC,GAAc,IAAZN,EAAW,EAAXA,KACZC,EAAeD,EAAfC,EAAGC,EAAYF,EAAZE,EAAGC,EAASH,EAATG,EAAGC,EAAMJ,EAANI,EAEjB,OAAIH,EAAIG,GAAM,EACL,4BAAI,kBAAC,IAAD,CAAKC,OAAK,GAAKF,EAAf,IAAoBC,EAApB,UAA+BH,EAA/B,IAAoCC,EAApC,MAA2CD,EAAIE,EAAIC,EAAnD,IAAwDF,IAE5D,4BAAI,kBAAC,IAAD,CAAKG,OAAK,GAAKF,EAAf,IAAoBC,EAApB,UAA+BH,EAA/B,IAAoCC,EAApC,MAA2CD,EAAIE,EAA/C,IAAoDD,EAAIE,KAmCxDG,EA9BF,SAAC,GAAc,IAAZP,EAAW,EAAXA,KACNC,EAAeD,EAAfC,EAAGC,EAAYF,EAAZE,EAAGC,EAASH,EAATG,EAAGC,EAAMJ,EAANI,EAEjB,OACE,oCACE,wCACA,oCAAS,kBAAC,IAAD,YAAT,OAA2B,kBAAC,IAAD,aAAcD,EAAd,IAAmBC,EAAnB,UAA8BH,EAA9B,IAAmCC,EAAnC,MAC3B,6BACA,4CAJF,KAKE,yCAAc,kBAAC,IAAD,mBAAqB,kBAAC,IAAD,aAAcD,EAAd,IAAmBC,EAAnB,KAA8B,kBAAC,IAAD,UAAjE,SAAmF,kBAAC,IAAD,WAAYE,EAAZ,KAAnF,kCAAyI,kBAAC,IAAD,WAAYD,EAAZ,KAAzI,mBACA,6BACA,yCACA,kBAAC,EAAD,CAAcH,KAAMA,IACpB,6BACA,uCACA,4BAAI,kBAAC,IAAD,YAAJ,OAAsB,kBAAC,IAAD,YAAtB,OAAwC,kBAAC,IAAD,KAAM,4BAC9C,kBAAC,EAAD,CAAYA,KAAMA,MCjDlBQ,EAAc,SAAC,GAAc,IAAZR,EAAW,EAAXA,KACbC,EAAeD,EAAfC,EAAGC,EAAYF,EAAZE,EAAGC,EAASH,EAATG,EAAGC,EAAMJ,EAANI,EAEjB,OAAIF,IAAME,EACD,+DAAoC,kBAAC,IAAD,UAApC,UAAuD,kBAAC,IAAD,UAAvD,QAAyEA,EAAzE,eAAuF,kBAAC,IAAD,WAAYH,EAAZ,KAAvF,2BAAsI,kBAAC,IAAD,WAAYE,EAAZ,KAAtI,KAGL,oCACE,+DACkC,kBAAC,IAAD,UADlC,UACqD,kBAAC,IAAD,UADrD,sBACoF,kBAAC,IAAD,WAAYF,EAAZ,KADpF,2BACmI,kBAAC,IAAD,WAAYE,EAAZ,KADnI,oFAC2O,kBAAC,IAAD,iBAD3O,uEAIA,4BACE,kBAAC,IAAD,CAAKE,OAAK,GAAE,iEACZ,kBAAC,IAAD,CAAKA,OAAK,GAAKF,EAAf,IAAoBC,EAApB,MAA2BH,EAA3B,IAAgCC,EAAhC,OAAwCC,EAAxC,UAAmDD,EAAnD,MAA0DE,EAA1D,UAAqEF,EAArE,QAA8ED,EAA9E,OAAsFG,EAAtF,MAA6FA,EAA7F,UAAwGF,EAAxG,OAAgHA,EAAIC,EAApH,IAAyHD,EAAIE,EAA7H,MAAoIH,EAAIG,EAAxI,IAA6IF,EAAIE,IAEnJ,2EAMFK,EAAY,SAAC,GAAc,IAAZT,EAAW,EAAXA,KACXC,EAAeD,EAAfC,EAAGC,EAAYF,EAAZE,EAAGC,EAASH,EAATG,EAAGC,EAAMJ,EAANI,EAEjB,OAAIF,IAAME,EAEN,4BACE,kBAAC,IAAD,CAAKC,OAAK,GAAE,sCACZ,6BACA,kBAAC,IAAD,CAAKA,OAAK,GAAKF,EAAf,IAAoBC,EAApB,MAA2BH,EAA3B,IAAgCC,EAAhC,OAAuCC,EAAIF,GAA3C,IAAgDC,IAKlD,4BACE,kBAAC,IAAD,CAAKG,OAAK,GAAE,gEACZ,6BACA,kBAAC,IAAD,CAAKA,OAAK,GAAKF,EAAf,IAAoBC,EAApB,MAA2BH,EAA3B,IAAgCC,EAAhC,OAAwCC,EAAxC,UAAmDD,EAAnD,MAA0DD,EAA1D,OAAkEG,EAAlE,MAAyEA,EAAzE,UAAoFF,EAApF,QAA6FC,EAAID,EAAjG,MAAwGD,EAAIG,EAA5G,MAAmHA,EAAIF,EAAvH,QAA+HA,EAAIC,EAAIF,EAAIG,GAA3I,IAAgJF,EAAIE,KAmC7IM,EA7BH,SAAC,GAAc,IAAZV,EAAW,EAAXA,KACLC,EAAeD,EAAfC,EAAGC,EAAYF,EAAZE,EAAGC,EAASH,EAATG,EAAGC,EAAMJ,EAANI,EAEjB,OACE,oCACE,wCACA,oCAAS,kBAAC,IAAD,mBAAoBD,EAApB,IAAyBC,EAAzB,MAAgCH,EAAhC,IAAqCC,EAArC,MACT,6BACA,4CACA,2CAAgB,kBAAC,IAAD,aAAcD,EAAd,IAAmBC,EAAnB,KAAhB,iCAA4E,kBAAC,IAAD,aAAcC,EAAd,IAAmBC,EAAnB,KAA5E,KACA,6BACA,yCACA,kBAAC,EAAD,CAAaJ,KAAMA,IACnB,6BACA,uCACA,kBAAC,EAAD,CAAWA,KAAMA,MC3DjBW,EAAc,SAAC,GAAc,IAAZX,EAAW,EAAXA,KACbC,EAAeD,EAAfC,EAAGC,EAAYF,EAAZE,EAAGC,EAASH,EAATG,EAAGC,EAAMJ,EAANI,EAEjB,OAAIF,IAAME,EACD,+DAAoC,kBAAC,IAAD,UAApC,UAAuD,kBAAC,IAAD,UAAvD,QAAyEA,EAAzE,eAAuF,kBAAC,IAAD,WAAYH,EAAZ,KAAvF,0BAAqI,kBAAC,IAAD,WAAYE,EAAZ,KAArI,KAGL,oCACE,+DACkC,kBAAC,IAAD,UADlC,UACqD,kBAAC,IAAD,UADrD,sBACoF,kBAAC,IAAD,WAAYF,EAAZ,KADpF,0BACkI,kBAAC,IAAD,WAAYE,EAAZ,KADlI,oFAC0O,kBAAC,IAAD,iBAD1O,uEAIA,4BACE,kBAAC,IAAD,CAAKE,OAAK,GAAE,iEACZ,kBAAC,IAAD,CAAKA,OAAK,GAAKF,EAAf,IAAoBC,EAApB,MAA2BH,EAA3B,IAAgCC,EAAhC,OAAwCC,EAAxC,UAAmDD,EAAnD,MAA0DE,EAA1D,UAAqEF,EAArE,QAA8ED,EAA9E,OAAsFG,EAAtF,MAA6FA,EAA7F,UAAwGF,EAAxG,OAAgHA,EAAIC,EAApH,IAAyHD,EAAIE,EAA7H,MAAoIH,EAAIG,EAAxI,IAA6IF,EAAIE,IAEnJ,yFAMFQ,EAAY,SAAC,GAAc,IAAZZ,EAAW,EAAXA,KACXC,EAAeD,EAAfC,EAAGC,EAAYF,EAAZE,EAAGC,EAASH,EAATG,EAAGC,EAAMJ,EAANI,EAEjB,OAAIF,IAAME,EAEN,4BACE,kBAAC,IAAD,CAAKC,OAAK,GAAE,sCACZ,6BACA,kBAAC,IAAD,CAAKA,OAAK,GAAKF,EAAf,IAAoBC,EAApB,MAA2BH,EAA3B,IAAgCC,EAAhC,OAAuCC,EAAIF,GAA3C,IAAgDC,IAKlD,4BACE,kBAAC,IAAD,CAAKG,OAAK,GAAE,gEACZ,6BACA,kBAAC,IAAD,CAAKA,OAAK,GAAKF,EAAf,IAAoBC,EAApB,MAA2BH,EAA3B,IAAgCC,EAAhC,OAAwCC,EAAxC,UAAmDD,EAAnD,MAA0DD,EAA1D,OAAkEG,EAAlE,MAAyEA,EAAzE,UAAoFF,EAApF,QAA6FC,EAAID,EAAjG,MAAwGD,EAAIG,EAA5G,MAAmHA,EAAIF,EAAvH,QAA+HA,EAAIC,EAAIF,EAAIG,GAA3I,IAAgJF,EAAIE,KAmC7IS,EA7BH,SAAC,GAAc,IAAZb,EAAW,EAAXA,KACLC,EAAeD,EAAfC,EAAGC,EAAYF,EAAZE,EAAGC,EAASH,EAATG,EAAGC,EAAMJ,EAANI,EAEjB,OACE,oCACE,wCACA,oCAAS,kBAAC,IAAD,mBAAoBD,EAApB,IAAyBC,EAAzB,MAAgCH,EAAhC,IAAqCC,EAArC,MACT,6BACA,4CACA,wCAAa,kBAAC,IAAD,aAAcD,EAAd,IAAmBC,EAAnB,KAAb,SAAiD,kBAAC,IAAD,aAAcC,EAAd,IAAmBC,EAAnB,KAAjD,KACA,6BACA,yCACA,kBAAC,EAAD,CAAaJ,KAAMA,IACnB,6BACA,uCACA,kBAAC,EAAD,CAAWA,KAAMA,MCvCRc,EAlBC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,GAAIf,EAAW,EAAXA,KACrB,OAAQe,GACN,IAAK,IACH,OAAO,kBAAC,EAAD,CAAMf,KAAMA,IACrB,IAAK,IACH,OAAO,kBAAC,EAAD,CAAMA,KAAMA,IACrB,IAAK,IACH,OAAO,kBAAC,EAAD,CAAMA,KAAMA,IACrB,QACE,OAAO,kBAAC,EAAD,CAAMA,KAAMA,MCXnBgB,EAAQ,qBACRC,EAAQ,wCACRC,EAAQC,qBAAW,4BAkFVC,UAhFF,WAAO,IAAD,EACCC,IAAMC,SAAS,IAA1BrB,EADU,KACPsB,EADO,OAECF,IAAMC,SAAS,IAA1BpB,EAFU,KAEPsB,EAFO,OAGCH,IAAMC,SAAS,IAA1BnB,EAHU,KAGPsB,EAHO,OAICJ,IAAMC,SAAS,IAA1BlB,EAJU,KAIPsB,EAJO,OAMeL,IAAMC,SAAS,KAAxCK,EANU,KAMAC,EANA,KAQXC,EAAS,SAACC,GAAD,OAAOF,EAAYE,EAAEC,OAAOC,QAE3C,OACE,kBAAC,IAAD,CAAQhB,MAAOA,EAAOC,KAAMA,EAAMC,MAAOA,GACvC,yBAAKe,UAAU,YACb,wBAAIA,UAAU,UAAUjB,GACxB,wBAAIiB,UAAU,UAAUhB,IAI1B,yBAAKgB,UAAU,+BACb,yBAAKA,UAAU,kFACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,oBAAhB,0BAEF,2BAAOC,KAAK,SAASF,MAAO7B,EAAGgC,SAAU,SAACL,GAAD,OAAOL,EAAKK,EAAEC,OAAOC,QAAQC,UAAU,0BAA0BG,IAAI,OAAOC,IAAI,MAAMC,YAAY,OAE7I,6BACA,yBAAKL,UAAU,eACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,oBAAhB,4BAEF,2BAAOC,KAAK,SAASF,MAAO5B,EAAG+B,SAAU,SAACL,GAAD,OAAOJ,EAAKI,EAAEC,OAAOC,QAAQC,UAAU,0BAA0BG,IAAI,OAAOC,IAAI,MAAMC,YAAY,QAI/I,yBAAKL,UAAU,oBAAmB,6BAAM,8BAExC,yBAAKA,UAAU,mBACb,0BAAMA,UAAU,uCAAuCM,KAAK,QAAQC,cAAY,WAC9E,2BAAOP,UAAU,4BACf,2BAAOC,KAAK,QAAQO,KAAK,KAAKT,MAAM,IAAIU,QAAsB,MAAbf,EAAkBgB,QAASd,IAD9E,MAGA,2BAAOI,UAAU,qBACf,2BAAOC,KAAK,QAAQO,KAAK,KAAKT,MAAM,IAAIU,QAAsB,MAAbf,EAAkBgB,QAASd,IAD9E,KAGA,2BAAOI,UAAU,qBACf,2BAAOC,KAAK,QAAQO,KAAK,KAAKT,MAAM,IAAIU,QAAsB,MAAbf,EAAkBgB,QAASd,IAD9E,OAMJ,yBAAKI,UAAU,oBAAmB,6BAAM,8BAExC,yBAAKA,UAAU,kFACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,oBAAhB,0BAEF,2BAAOC,KAAK,SAASF,MAAO/B,EAAGkC,SAAU,SAACL,GAAD,OAAOP,EAAKO,EAAEC,OAAOC,QAAQC,UAAU,0BAA0BG,IAAI,OAAOC,IAAI,MAAMC,YAAY,OAE7I,6BACA,yBAAKL,UAAU,eACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,oBAAhB,4BAEF,2BAAOC,KAAK,SAASF,MAAO9B,EAAGiC,SAAU,SAACL,GAAD,OAAON,EAAKM,EAAEC,OAAOC,QAAQC,UAAU,0BAA0BG,IAAI,OAAOC,IAAI,MAAMC,YAAY,SAMjJ,yBAAKL,UAAU,YACb,yBAAKA,UAAU,mBACb,kBAAC,EAAD,CAAalB,GAAIY,EAAU3B,KAAM,CAAEC,EAAG2C,OAAO3C,GAAIC,EAAG0C,OAAO1C,GAAIC,EAAGyC,OAAOzC,GAAIC,EAAGwC,OAAOxC","file":"component---src-pages-frac-js-a99e77e8a07ef87f80c8.js","sourcesContent":["import React from 'react';\nimport LTX   from '../../components/latex';\n\nimport PropTypes from 'prop-types';\n\n\nconst MultSolution = ({ nums }) => {\n  const { k, l, m, n } = nums;\n\n  if (k % n === 0) {\n    return <h5>The first step is to partition <LTX>{`k/l (${k}/${l})`}</LTX> into <LTX>{`n (${n})`}</LTX> equal parts, each of which is <LTX>{`{k div n}/l (${(k / n)} / ${l})`}</LTX> in length. Then, concatenate <LTX>{`m (${m})`}</LTX> of these parts.</h5>;\n  } else {\n    return (\n      <>\n        <h5>\n          The first step is to partition <LTX>{`k/l (${k}/${l})`}</LTX> into <LTX>{`n (${n})`}</LTX> equal parts, but we can't, so we must force <LTX>{`k/l (${k}/${l})`}</LTX> into being able to be split into <LTX>{`n (${n})`}</LTX> equal parts.\n          In order to do that, we must use equivalent fractions to make <LTX>{`k (${k})`}</LTX> into a multiple of <LTX>{`n (${n})`}</LTX>:\n        </h5>\n        <h6>\n          <LTX block>{'k/l = {k times n}/{l times n} = {kn}/{ln}'}</LTX>\n          <LTX block>{`${k}/${l} = {${k} times ${n}}/{${l} times ${n}} = ${k * n}/${l * n}`}</LTX>\n        </h6>\n        <h5>The next step is to split the equivalent fraction into <LTX>{`n (${n})`}</LTX> equal parts, each of which is <LTX>{`k/{ln} (${k}/${l * n})`}</LTX> in length. All that is left is to concatenate <LTX>{`m (${m})`}</LTX> of these parts.</h5>\n      </>\n    );\n  }\n};\n\nconst MultAnswer = ({ nums }) => {\n  const { k, l, m, n } = nums;\n\n  if (k % n === 0) {\n    return <h6><LTX block>{`${m}/${n} times ${k}/${l} = ${k * m / n}/${l}`}</LTX></h6>;\n  } else {\n    return <h6><LTX block>{`${m}/${n} times ${k}/${l} = ${k * m}/${l * n}`}</LTX></h6>;\n  }\n};\n\n\nconst Mult = ({ nums }) => {\n  const { k, l, m, n } = nums;\n\n  return (\n    <>\n      <h3>Problem:</h3>\n      <h5>Find <LTX>m/n</LTX> of <LTX>{`k/l (${m}/${n} times ${k}/${l})`}</LTX></h5>\n      <br />\n      <h3>Explanation:</h3>  {/*  messy LTX calls necessary to properly display coordinate pair within parentheses */}\n      <h5>Partition <LTX>[0, k/l] (</LTX><LTX>{`[0 , ${k}/${l}]`}</LTX><LTX>)</LTX> into <LTX>{`n (${n})`}</LTX> equal parts, then concatenate <LTX>{`m (${m})`}</LTX> of those parts</h5>\n      <br />\n      <h3>Solution:</h3>\n      <MultSolution nums={nums} />\n      <br />\n      <h3>Answer:</h3>\n      <h5><LTX>m/n</LTX> of <LTX>k/l</LTX> is <LTX>{'{k times m}/{l times n}'}</LTX></h5>\n      <MultAnswer nums={nums} />\n    </>\n  );\n};\n\nMult.propTypes = {\n  nums: PropTypes.shape({\n    k: PropTypes.number.isRequired,\n    l: PropTypes.number.isRequired,\n    m: PropTypes.number.isRequired,\n    n: PropTypes.number.isRequired,\n  }),\n};\n\nexport default Mult;\n","import React from 'react';\nimport LTX   from '../../components/latex';\n\nimport PropTypes from 'prop-types';\n\n\nconst AddSolution = ({ nums }) => {\n  const { k, l, m, n } = nums;\n\n  if (l === n) {\n    return <h5>On a number line partitioned in <LTX>n</LTX>ths or <LTX>l</LTX>ths ({n}ths), count <LTX>{`k (${k})`}</LTX> spaces to the right of <LTX>{`m (${m})`}</LTX>.</h5>;\n  } else {\n    return (\n      <>\n        <h5>\n          On a number line partitioned in <LTX>n</LTX>ths or <LTX>l</LTX>ths, We will count <LTX>{`k (${k})`}</LTX> spaces to the right of <LTX>{`m (${m})`}</LTX>, but we can't do that yet because the fractions don't have the same denominator <LTX>(n != l)</LTX>.\n          We must do equivalent fractions to make their denominators equal:\n        </h5>\n        <h6>\n          <LTX block>{'m/n + k/l = {m times l}/{n times l} + {k times n}/{n times l}'}</LTX>\n          <LTX block>{`${m}/${n} + ${k}/${l} = {${m} times ${l}}/{${n} times ${l}} + {${k} xx ${n}}/{${n} times ${l}} = ${l * m}/${l * n} + ${k * n}/${l * n}`}</LTX>\n        </h6>\n        <h5>Now we can concatenate the two fractions.</h5>\n      </>\n    );\n  }\n};\n\nconst AddAnswer = ({ nums }) => {\n  const { k, l, m, n } = nums;\n\n  if (l === n) {\n    return (\n      <h6>\n        <LTX block>{'m/n + k/l = {m+k}/n \" or \" {m+k}/l'}</LTX>\n        <br />\n        <LTX block>{`${m}/${n} + ${k}/${l} = ${m + k}/${l}`}</LTX>\n      </h6>\n    );\n  } else {\n    return (\n      <h6>\n        <LTX block>{'m/n + k/l = {m times l+k times n}/{n times l} = {lm+kn}/{ln}'}</LTX>\n        <br />\n        <LTX block>{`${m}/${n} + ${k}/${l} = {${m} times ${l} + ${k} xx ${n}}/{${n} times ${l}} = {${m * l} + ${k * n}}/{${n * l}} = ${l * m + k * n}/${l * n}`}</LTX>\n      </h6>\n    );\n  }\n};\n\nconst Add = ({ nums }) => {\n  const { k, l, m, n } = nums;\n\n  return (\n    <>\n      <h3>Problem:</h3>\n      <h5>Find <LTX>{`m/n + k/l (${m}/${n} + ${k}/${l})`}</LTX></h5>\n      <br />\n      <h3>Explanation:</h3>\n      <h5>Concatenate <LTX>{`k/l (${k}/${l})`}</LTX> to a number line starting at <LTX>{`m/n (${m}/${n})`}</LTX> </h5>\n      <br />\n      <h3>Solution:</h3>\n      <AddSolution nums={nums} />\n      <br />\n      <h3>Answer:</h3>\n      <AddAnswer nums={nums} />\n    </>\n  );\n};\n\nAdd.propTypes = {\n  nums: PropTypes.shape({\n    k: PropTypes.number.isRequired,\n    l: PropTypes.number.isRequired,\n    m: PropTypes.number.isRequired,\n    n: PropTypes.number.isRequired,\n  }),\n};\n\nexport default Add;\n","import React from 'react';\nimport LTX   from '../../components/latex';\n\nimport PropTypes from 'prop-types';\n\n\nconst SubSolution = ({ nums }) => {\n  const { k, l, m, n } = nums;\n\n  if (l === n) {\n    return <h5>On a number line partitioned in <LTX>n</LTX>ths or <LTX>l</LTX>ths ({n}ths), count <LTX>{`k (${k})`}</LTX> spaces to the left of <LTX>{`m (${m})`}</LTX>.</h5>;\n  } else {\n    return (\n      <>\n        <h5>\n          On a number line partitioned in <LTX>n</LTX>ths or <LTX>l</LTX>ths, We will count <LTX>{`k (${k})`}</LTX> spaces to the left of <LTX>{`m (${m})`}</LTX>, but we can't do that yet because the fractions don't have the same denominator <LTX>(n != l)</LTX>.\n          We must do equivalent fractions to make their denominators equal:\n        </h5>\n        <h6>\n          <LTX block>{'m/n - k/l = {m times l}/{n times l} - {k times n}/{n times l}'}</LTX>\n          <LTX block>{`${m}/${n} - ${k}/${l} = {${m} times ${l}}/{${n} times ${l}} - {${k} xx ${n}}/{${n} times ${l}} = ${l * m}/${l * n} - ${k * n}/${l * n}`}</LTX>\n        </h6>\n        <h5>Now we can truncate the second fraction from the first.</h5>\n      </>\n    );\n  }\n};\n\nconst SubAnswer = ({ nums }) => {\n  const { k, l, m, n } = nums;\n\n  if (l === n) {\n    return (\n      <h6>\n        <LTX block>{'m/n - k/l = {m-k}/n \" or \" {m-k}/l'}</LTX>\n        <br />\n        <LTX block>{`${m}/${n} - ${k}/${l} = ${m - k}/${l}`}</LTX>\n      </h6>\n    );\n  } else {\n    return (\n      <h6>\n        <LTX block>{'m/n - k/l = {m times l-k times n}/{n times l} = {lm-kn}/{ln}'}</LTX>\n        <br />\n        <LTX block>{`${m}/${n} - ${k}/${l} = {${m} times ${l} - ${k} xx ${n}}/{${n} times ${l}} = {${m * l} - ${k * n}}/{${n * l}} = ${l * m - k * n}/${l * n}`}</LTX>\n      </h6>\n    );\n  }\n};\n\nconst Sub = ({ nums }) => {\n  const { k, l, m, n } = nums;\n\n  return (\n    <>\n      <h3>Problem:</h3>\n      <h5>Find <LTX>{`m/n - k/l (${m}/${n} - ${k}/${l})`}</LTX></h5>\n      <br />\n      <h3>Explanation:</h3>\n      <h5>Truncate <LTX>{`k/l (${k}/${l})`}</LTX> from <LTX>{`m/n (${m}/${n})`}</LTX> </h5>\n      <br />\n      <h3>Solution:</h3>\n      <SubSolution nums={nums} />\n      <br />\n      <h3>Answer:</h3>\n      <SubAnswer nums={nums} />\n    </>\n  );\n};\n\nSub.propTypes = {\n  nums: PropTypes.shape({\n    k: PropTypes.number.isRequired,\n    l: PropTypes.number.isRequired,\n    m: PropTypes.number.isRequired,\n    n: PropTypes.number.isRequired,\n  }),\n};\n\nexport default Sub;\n","import React     from 'react';\nimport PropTypes from 'prop-types';\n\nimport Mult from './frac/mult';\nimport Add  from './frac/add';\nimport Sub  from './frac/sub';\n\n\nconst Answers = ({ op, nums }) => {\n  switch (op) {\n    case '*':\n      return <Mult nums={nums} />;\n    case '+':\n      return <Add  nums={nums} />;\n    case '-':\n      return <Sub  nums={nums} />;\n    default:\n      return <Mult nums={nums} />;\n  }\n};\n\nAnswers.propTypes = {\n  op  : PropTypes.string.isRequired,\n  nums: PropTypes.objectOf(PropTypes.number.isRequired),\n};\n\nexport default Answers;\n","import React  from 'react';\nimport Layout from '../components/layout';\n\nimport { withPrefix } from 'gatsby';\nimport FracAnswers    from '../answers/frac';\n\nconst title = 'Fraction Multitool';\nconst desc  = 'Generalization of fraction operations';\nconst image = withPrefix('/images/cream_pixels.png');\n\nconst Frac = () => {\n  const [k, setK] = React.useState('');\n  const [l, setL] = React.useState('');\n  const [m, setM] = React.useState('');\n  const [n, setN] = React.useState('');\n\n  const [selected, setSelected] = React.useState('*');\n\n  const select = (e) => setSelected(e.target.value);\n\n  return (\n    <Layout title={title} desc={desc} image={image}>\n      <div className='row pt-4'>\n        <h1 className='col-12'>{title}</h1>\n        <h2 className='col-12'>{desc}</h2>\n      </div>\n\n\n      <div className='row pt-4 align-items-center'>\n        <div className='col-10 offset-1 col-sm-8 offset-sm-2 col-md-6 offset-md-3 col-lg-4 offset-lg-1'>\n          <div className='input-group'>\n            <div className='input-group-prepend'>\n              <span className='input-group-text'>Fraction 1 numerator:</span>\n            </div>\n            <input type='number' value={m} onChange={(e) => setM(e.target.value)} className='form-control text-right' min='-999' max='999' placeholder='m' />\n          </div>\n          <hr />\n          <div className='input-group'>\n            <div className='input-group-prepend'>\n              <span className='input-group-text'>Fraction 1 denominator:</span>\n            </div>\n            <input type='number' value={n} onChange={(e) => setN(e.target.value)} className='form-control text-right' min='-999' max='999' placeholder='n' />\n          </div>\n        </div>\n\n        <div className='col-12 d-lg-none'><br /><br /></div>\n\n        <div className='col-12 col-lg-2'>\n          <form className='btn-group btn-group btn-group-toggle' role='group' data-toggle='buttons'>\n            <label className='btn btn-secondary active'>\n              <input type='radio' name='op' value='*' checked={selected === '*'} onClick={select} />Of\n            </label>\n            <label className='btn btn-secondary'>\n              <input type='radio' name='op' value='+' checked={selected === '+'} onClick={select} />+\n            </label>\n            <label className='btn btn-secondary'>\n              <input type='radio' name='op' value='-' checked={selected === '-'} onClick={select} />-\n            </label>\n          </form>\n        </div>\n\n        <div className='col-12 d-lg-none'><br /><br /></div>\n\n        <div className='col-10 offset-1 col-sm-8 offset-sm-2 col-md-6 offset-md-3 col-lg-4 offset-lg-0'>\n          <div className='input-group'>\n            <div className='input-group-prepend'>\n              <span className='input-group-text'>Fraction 2 numerator:</span>\n            </div>\n            <input type='number' value={k} onChange={(e) => setK(e.target.value)} className='form-control text-right' min='-999' max='999' placeholder='k' />\n          </div>\n          <hr />\n          <div className='input-group'>\n            <div className='input-group-prepend'>\n              <span className='input-group-text'>Fraction 2 denominator:</span>\n            </div>\n            <input type='number' value={l} onChange={(e) => setL(e.target.value)} className='form-control text-right' min='-999' max='999' placeholder='l' />\n          </div>\n        </div>\n      </div>\n\n\n      <div className='row py-4'>\n        <div className='col-10 offset-1'>\n          <FracAnswers op={selected} nums={{ k: Number(k), l: Number(l), m: Number(m), n: Number(n) }} />\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Frac;\n"],"sourceRoot":""}